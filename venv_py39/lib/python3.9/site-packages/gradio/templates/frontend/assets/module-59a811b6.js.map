{"version":3,"file":"module-59a811b6.js","sources":["../../../../node_modules/.pnpm/fast-unique-numbers@8.0.7/node_modules/fast-unique-numbers/build/es2019/factories/add-unique-number.js","../../../../node_modules/.pnpm/fast-unique-numbers@8.0.7/node_modules/fast-unique-numbers/build/es2019/factories/cache.js","../../../../node_modules/.pnpm/fast-unique-numbers@8.0.7/node_modules/fast-unique-numbers/build/es2019/factories/generate-unique-number.js","../../../../node_modules/.pnpm/fast-unique-numbers@8.0.7/node_modules/fast-unique-numbers/build/es2019/module.js","../../../../node_modules/.pnpm/broker-factory@3.0.84/node_modules/broker-factory/build/es2019/guards/message-port.js","../../../../node_modules/.pnpm/broker-factory@3.0.84/node_modules/broker-factory/build/es2019/helpers/port-map.js","../../../../node_modules/.pnpm/broker-factory@3.0.84/node_modules/broker-factory/build/es2019/helpers/extend-broker-implementation.js","../../../../node_modules/.pnpm/broker-factory@3.0.84/node_modules/broker-factory/build/es2019/module.js","../../../../node_modules/.pnpm/media-encoder-host-broker@7.0.89/node_modules/media-encoder-host-broker/build/es2019/module.js","../../../../node_modules/.pnpm/media-encoder-host@8.0.99/node_modules/media-encoder-host/build/es2019/worker/worker.js","../../../../node_modules/.pnpm/media-encoder-host@8.0.99/node_modules/media-encoder-host/build/es2019/module.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/blob-event-factory.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/decode-web-m-chunk.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/event-target-constructor.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/event-target-factory.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/invalid-modification-error.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/invalid-state-error.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/is-supported-promise.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/media-recorder-constructor.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/native-blob-event-constructor.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder-constructor.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/not-supported-error.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/read-element-content.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/read-element-type.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/read-variable-size-integer.js","../../../../node_modules/.pnpm/rxjs-interop@2.0.0/node_modules/rxjs-interop/dist/esm/symbols.js","../../../../node_modules/.pnpm/rxjs-interop@2.0.0/node_modules/rxjs-interop/dist/esm/patch.js","../../../../node_modules/.pnpm/rxjs-interop@2.0.0/node_modules/rxjs-interop/dist/esm/to-observer.js","../../../../node_modules/.pnpm/subscribable-things@2.1.23/node_modules/subscribable-things/build/es2019/factories/on.js","../../../../node_modules/.pnpm/subscribable-things@2.1.23/node_modules/subscribable-things/build/es2019/factories/wrap-subscribe-function.js","../../../../node_modules/.pnpm/subscribable-things@2.1.23/node_modules/subscribable-things/build/es2019/module.js","../../../../node_modules/.pnpm/dashify@2.0.0/node_modules/dashify/index.js","../../../../node_modules/.pnpm/indefinite-article@0.0.2/node_modules/indefinite-article/indefinite-article.js","../../../../node_modules/.pnpm/compilerr@11.0.8/node_modules/compilerr/build/es2019/module.js","../../../../node_modules/.pnpm/worker-factory@7.0.9/node_modules/worker-factory/build/es2019/helpers/error-renderers.js","../../../../node_modules/.pnpm/recorder-audio-worklet@6.0.13/node_modules/recorder-audio-worklet/build/es2019/factories/add-recorder-audio-worklet-module.js","../../../../node_modules/.pnpm/recorder-audio-worklet@6.0.13/node_modules/recorder-audio-worklet/build/es2019/factories/listener.js","../../../../node_modules/.pnpm/recorder-audio-worklet@6.0.13/node_modules/recorder-audio-worklet/build/es2019/factories/post-message-factory.js","../../../../node_modules/.pnpm/recorder-audio-worklet@6.0.13/node_modules/recorder-audio-worklet/build/es2019/factories/recorder-audio-worklet-node-factory.js","../../../../node_modules/.pnpm/recorder-audio-worklet@6.0.13/node_modules/recorder-audio-worklet/build/es2019/functions/validate-state.js","../../../../node_modules/.pnpm/recorder-audio-worklet@6.0.13/node_modules/recorder-audio-worklet/build/es2019/worklet/worklet.js","../../../../node_modules/.pnpm/recorder-audio-worklet@6.0.13/node_modules/recorder-audio-worklet/build/es2019/module.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/create-extended-exponential-ramp-to-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/create-extended-linear-ramp-to-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/create-set-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/create-set-value-curve-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/get-target-value-at-time.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/guards/exponential-ramp-to-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/guards/linear-ramp-to-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/guards/any-ramp-to-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/guards/set-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/guards/set-value-curve-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/get-value-of-automation-event-at-index-at-time.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/get-end-time-and-value-of-previous-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/guards/cancel-and-hold-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/guards/cancel-scheduled-values-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/get-event-time.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/get-exponential-ramp-value-at-time.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/get-linear-ramp-value-at-time.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/interpolate-value.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/get-value-curve-value-at-time.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/guards/set-target-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/classes/automation-event-list.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/create-cancel-and-hold-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/create-cancel-scheduled-values-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/create-exponential-ramp-to-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/create-linear-ramp-to-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@6.0.8/node_modules/automation-events/build/es2019/functions/create-set-target-automation-event.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/globals.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/constants.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/guards/gain-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/read-only-map.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/window.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/get-first-sample.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-worklet-node-options-clonability.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.55/node_modules/standardized-audio-context/build/es2019/module.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/web-audio-media-recorder.js","../../../../node_modules/.pnpm/multi-buffer-data-view@5.0.8/node_modules/multi-buffer-data-view/build/es2019/classes/multi-buffer-data-view.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/webm-pcm-media-recorder.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/factories/window.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/functions/read-variable-size-integer-length.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/functions/wrap-event-listener.js","../../../../node_modules/.pnpm/extendable-media-recorder@9.0.0/node_modules/extendable-media-recorder/build/es2019/module.js"],"sourcesContent":["export const createAddUniqueNumber = (generateUniqueNumber) => {\n    return (set) => {\n        const number = generateUniqueNumber(set);\n        set.add(number);\n        return number;\n    };\n};\n//# sourceMappingURL=add-unique-number.js.map","export const createCache = (lastNumberWeakMap) => {\n    return (collection, nextNumber) => {\n        lastNumberWeakMap.set(collection, nextNumber);\n        return nextNumber;\n    };\n};\n//# sourceMappingURL=cache.js.map","/*\n * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n * is fairly new.\n */\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\nconst TWO_TO_THE_POWER_OF_TWENTY_NINE = 536870912;\nconst TWO_TO_THE_POWER_OF_THIRTY = TWO_TO_THE_POWER_OF_TWENTY_NINE * 2;\nexport const createGenerateUniqueNumber = (cache, lastNumberWeakMap) => {\n    return (collection) => {\n        const lastNumber = lastNumberWeakMap.get(collection);\n        /*\n         * Let's try the cheapest algorithm first. It might fail to produce a new\n         * number, but it is so cheap that it is okay to take the risk. Just\n         * increase the last number by one or reset it to 0 if we reached the upper\n         * bound of SMIs (which stands for small integers). When the last number is\n         * unknown it is assumed that the collection contains zero based consecutive\n         * numbers.\n         */\n        let nextNumber = lastNumber === undefined ? collection.size : lastNumber < TWO_TO_THE_POWER_OF_THIRTY ? lastNumber + 1 : 0;\n        if (!collection.has(nextNumber)) {\n            return cache(collection, nextNumber);\n        }\n        /*\n         * If there are less than half of 2 ** 30 numbers stored in the collection,\n         * the chance to generate a new random number in the range from 0 to 2 ** 30\n         * is at least 50%. It's benifitial to use only SMIs because they perform\n         * much better in any environment based on V8.\n         */\n        if (collection.size < TWO_TO_THE_POWER_OF_TWENTY_NINE) {\n            while (collection.has(nextNumber)) {\n                nextNumber = Math.floor(Math.random() * TWO_TO_THE_POWER_OF_THIRTY);\n            }\n            return cache(collection, nextNumber);\n        }\n        // Quickly check if there is a theoretical chance to generate a new number.\n        if (collection.size > MAX_SAFE_INTEGER) {\n            throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n        }\n        // Otherwise use the full scale of safely usable integers.\n        while (collection.has(nextNumber)) {\n            nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n        }\n        return cache(collection, nextNumber);\n    };\n};\n//# sourceMappingURL=generate-unique-number.js.map","import { createAddUniqueNumber } from './factories/add-unique-number';\nimport { createCache } from './factories/cache';\nimport { createGenerateUniqueNumber } from './factories/generate-unique-number';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './types/index';\nconst LAST_NUMBER_WEAK_MAP = new WeakMap();\nconst cache = createCache(LAST_NUMBER_WEAK_MAP);\nconst generateUniqueNumber = createGenerateUniqueNumber(cache, LAST_NUMBER_WEAK_MAP);\nconst addUniqueNumber = createAddUniqueNumber(generateUniqueNumber);\nexport { addUniqueNumber, generateUniqueNumber };\n//# sourceMappingURL=module.js.map","export const isMessagePort = (sender) => {\n    return typeof sender.start === 'function';\n};\n//# sourceMappingURL=message-port.js.map","export const PORT_MAP = new WeakMap();\n//# sourceMappingURL=port-map.js.map","import { PORT_MAP } from './port-map';\nexport const extendBrokerImplementation = (partialBrokerImplementation) => ({\n    ...partialBrokerImplementation,\n    connect: ({ call }) => {\n        return async () => {\n            const { port1, port2 } = new MessageChannel();\n            const portId = await call('connect', { port: port1 }, [port1]);\n            PORT_MAP.set(port2, portId);\n            return port2;\n        };\n    },\n    disconnect: ({ call }) => {\n        return async (port) => {\n            const portId = PORT_MAP.get(port);\n            if (portId === undefined) {\n                throw new Error('The given port is not connected.');\n            }\n            await call('disconnect', { portId });\n        };\n    },\n    isSupported: ({ call }) => {\n        return () => call('isSupported');\n    }\n});\n//# sourceMappingURL=extend-broker-implementation.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst ONGOING_REQUESTS = new WeakMap();\nconst createOrGetOngoingRequests = (sender) => {\n    if (ONGOING_REQUESTS.has(sender)) {\n        // @todo TypeScript needs to be convinced that has() works as expected.\n        return ONGOING_REQUESTS.get(sender);\n    }\n    const ongoingRequests = new Map();\n    ONGOING_REQUESTS.set(sender, ongoingRequests);\n    return ongoingRequests;\n};\nexport const createBroker = (brokerImplementation) => {\n    const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n    return (sender) => {\n        const ongoingRequests = createOrGetOngoingRequests(sender);\n        sender.addEventListener('message', (({ data: message }) => {\n            const { id } = message;\n            if (id !== null && ongoingRequests.has(id)) {\n                const { reject, resolve } = ongoingRequests.get(id);\n                ongoingRequests.delete(id);\n                if (message.error === undefined) {\n                    resolve(message.result);\n                }\n                else {\n                    reject(new Error(message.error.message));\n                }\n            }\n        }));\n        if (isMessagePort(sender)) {\n            sender.start();\n        }\n        const call = (method, params = null, transferables = []) => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n                ongoingRequests.set(id, { reject, resolve });\n                if (params === null) {\n                    sender.postMessage({ id, method }, transferables);\n                }\n                else {\n                    sender.postMessage({ id, method, params }, transferables);\n                }\n            });\n        };\n        const notify = (method, params, transferables = []) => {\n            sender.postMessage({ id: null, method, params }, transferables);\n        };\n        let functions = {};\n        for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n            functions = { ...functions, [key]: handler({ call, notify }) };\n        }\n        return { ...functions };\n    };\n};\n//# sourceMappingURL=module.js.map","import { createBroker } from 'broker-factory';\nimport { addUniqueNumber } from 'fast-unique-numbers';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderIds = new Set();\nexport const wrap = createBroker({\n    encode: ({ call }) => {\n        return async (encoderId, timeslice) => {\n            const arrayBuffers = await call('encode', { encoderId, timeslice });\n            encoderIds.delete(encoderId);\n            return arrayBuffers;\n        };\n    },\n    instantiate: ({ call }) => {\n        return async (mimeType, sampleRate) => {\n            const encoderId = addUniqueNumber(encoderIds);\n            const port = await call('instantiate', { encoderId, mimeType, sampleRate });\n            return { encoderId, port };\n        };\n    },\n    register: ({ call }) => {\n        return (port) => {\n            return call('register', { port }, [port]);\n        };\n    }\n});\nexport const load = (url) => {\n    const worker = new Worker(url);\n    return wrap(worker);\n};\n//# sourceMappingURL=module.js.map","// This is the minified and stringified code of the media-encoder-host-worker package.\nexport const worker = `(()=>{var e={881:e=>{\"use strict\";e.exports=(e,t)=>{if(\"string\"!=typeof e)throw new TypeError(\"expected a string\");return e.trim().replace(/([a-z])([A-Z])/g,\"$1-$2\").replace(/\\\\W/g,(e=>/[À-ž]/.test(e)?e:\"-\")).replace(/^-+|-+$/g,\"\").replace(/-{2,}/g,(e=>t&&t.condense?\"-\":e)).toLowerCase()}},507:e=>{var t=function(e){var t,r,n=/\\\\w+/.exec(e);if(!n)return\"an\";var o=(r=n[0]).toLowerCase(),s=[\"honest\",\"hour\",\"hono\"];for(t in s)if(0==o.indexOf(s[t]))return\"an\";if(1==o.length)return\"aedhilmnorsx\".indexOf(o)>=0?\"an\":\"a\";if(r.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/))return\"an\";var a=[/^e[uw]/,/^onc?e\\\\b/,/^uni([^nmd]|mo)/,/^u[bcfhjkqrst][aeiou]/];for(t=0;t<a.length;t++)if(o.match(a[t]))return\"a\";return r.match(/^U[NK][AIEO]/)?\"a\":r==r.toUpperCase()?\"aedhilmnorsx\".indexOf(o[0])>=0?\"an\":\"a\":\"aeiou\".indexOf(o[0])>=0||o.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/)?\"an\":\"a\"};void 0!==e.exports?e.exports=t:window.indefiniteArticle=t}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var s=t[n]={exports:{}};return e[n](s,s.exports,r),s.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{\"use strict\";var e=r(881),t=r.n(e),n=r(507),o=r.n(n);const s=(e,r)=>void 0===r?e:r.reduce(((e,r)=>{if(\"capitalize\"===r){const t=e.charAt(0).toUpperCase(),r=e.slice(1);return\"\".concat(t).concat(r)}return\"dashify\"===r?t()(e):\"prependIndefiniteArticle\"===r?\"\".concat(o()(e),\" \").concat(e):e}),e),a=(e,t)=>{const r=/\\\\\\${([^.}]+)((\\\\.[^(]+\\\\(\\\\))*)}/g,n=[];let o=r.exec(e);for(;null!==o;){const t={modifiers:[],name:o[1]};if(void 0!==o[3]){const e=/\\\\.[^(]+\\\\(\\\\)/g;let r=e.exec(o[2]);for(;null!==r;)t.modifiers.push(r[0].slice(1,-2)),r=e.exec(o[2])}n.push(t),o=r.exec(e)}const a=n.reduce(((e,r)=>e.map((e=>\"string\"==typeof e?e.split((e=>{const t=e.name+e.modifiers.map((e=>\"\\\\\\\\.\".concat(e,\"\\\\\\\\(\\\\\\\\)\"))).join(\"\");return new RegExp(\"\\\\\\\\$\\\\\\\\{\".concat(t,\"}\"),\"g\")})(r)).reduce(((e,n,o)=>0===o?[n]:r.name in t?[...e,s(t[r.name],r.modifiers),n]:[...e,e=>s(e[r.name],r.modifiers),n]),[]):[e])).reduce(((e,t)=>[...e,...t]),[])),[e]);return e=>a.reduce(((t,r)=>\"string\"==typeof r?[...t,r]:[...t,r(e)]),[]).join(\"\")},i=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=void 0===e.code?void 0:a(e.code,t),n=void 0===e.message?void 0:a(e.message,t);return function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1?arguments[1]:void 0;const s=void 0===o&&(t instanceof Error||void 0!==t.code&&\"Exception\"===t.code.slice(-9)),{cause:a,missingParameters:i}=s?{cause:t,missingParameters:{}}:{cause:o,missingParameters:t},c=void 0===n?new Error:new Error(n(i));return null!==a&&(c.cause=a),void 0!==r&&(c.code=r(i)),void 0!==e.status&&(c.status=e.status),c}},c=-32603,d=-32602,l=i({message:'The requested method called \"\\${method}\" is not supported.',status:-32601}),u=i({message:'The handler of the method called \"\\${method}\" returned no required result.',status:c}),h=i({message:'The handler of the method called \"\\${method}\" returned an unexpected result.',status:c}),m=i({message:'The specified parameter called \"portId\" with the given value \"\\${portId}\" does not identify a port connected to this worker.',status:d}),p=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,f=536870912,g=1073741824,w=new WeakMap;var v;const y=((e,t)=>r=>{const n=t.get(r);let o=void 0===n?r.size:n<g?n+1:0;if(!r.has(o))return e(r,o);if(r.size<f){for(;r.has(o);)o=Math.floor(Math.random()*g);return e(r,o)}if(r.size>p)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;r.has(o);)o=Math.floor(Math.random()*p);return e(r,o)})((v=w,(e,t)=>(v.set(e,t),t)),w),M=((e=>{})(y),new Map),E=(e,t,r)=>({...t,connect:r=>{let{port:n}=r;n.start();const o=e(n,t),s=y(M);return M.set(s,(()=>{o(),n.close(),M.delete(s)})),{result:s}},disconnect:e=>{let{portId:t}=e;const r=M.get(t);if(void 0===r)throw m({portId:t.toString()});return r(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=t=>{let{data:r}=t;return e(null!==r)},n.postMessage(t,[t])}))){const e=r();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),x=function(e,t){const r=E(x,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0),n=((e,t)=>async r=>{let{data:{id:n,method:o,params:s}}=r;const a=t[o];try{if(void 0===a)throw l({method:o});const t=void 0===s?a():a(s);if(void 0===t)throw u({method:o});const r=t instanceof Promise?await t:t;if(null===n){if(void 0!==r.result)throw h({method:o})}else{if(void 0===r.result)throw h({method:o});const{result:t,transferables:s=[]}=r;e.postMessage({id:n,result:t},s)}}catch(t){const{message:r,status:o=-32603}=t;e.postMessage({error:{code:o,message:r},id:n})}})(e,r);return e.addEventListener(\"message\",n),()=>e.removeEventListener(\"message\",n)},b=e=>{e.onmessage=null,e.close()},A=new WeakMap,T=new WeakMap,I=(e=>{const t=(r=e,{...r,connect:e=>{let{call:t}=e;return async()=>{const{port1:e,port2:r}=new MessageChannel,n=await t(\"connect\",{port:e},[e]);return A.set(r,n),r}},disconnect:e=>{let{call:t}=e;return async e=>{const r=A.get(e);if(void 0===r)throw new Error(\"The given port is not connected.\");await t(\"disconnect\",{portId:r})}},isSupported:e=>{let{call:t}=e;return()=>t(\"isSupported\")}});var r;return e=>{const r=(e=>{if(T.has(e))return T.get(e);const t=new Map;return T.set(e,t),t})(e);e.addEventListener(\"message\",(e=>{let{data:t}=e;const{id:n}=t;if(null!==n&&r.has(n)){const{reject:e,resolve:o}=r.get(n);r.delete(n),void 0===t.error?o(t.result):e(new Error(t.error.message))}})),(e=>\"function\"==typeof e.start)(e)&&e.start();const n=function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return new Promise(((s,a)=>{const i=y(r);r.set(i,{reject:a,resolve:s}),null===n?e.postMessage({id:i,method:t},o):e.postMessage({id:i,method:t,params:n},o)}))},o=function(t,r){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];e.postMessage({id:null,method:t,params:r},n)};let s={};for(const[e,r]of Object.entries(t))s={...s,[e]:r({call:n,notify:o})};return{...s}}})({characterize:e=>{let{call:t}=e;return()=>t(\"characterize\")},encode:e=>{let{call:t}=e;return(e,r)=>t(\"encode\",{recordingId:e,timeslice:r})},record:e=>{let{call:t}=e;return async(e,r,n)=>{await t(\"record\",{recordingId:e,sampleRate:r,typedArrays:n},n.map((e=>{let{buffer:t}=e;return t})))}}}),O=async(e,t)=>{const r=I(t),n=await r.characterize(),o=n.toString();if(e.has(o))throw new Error(\"There is already an encoder stored which handles exactly the same mime types.\");return e.set(o,[n,r]),n},L=new Map,P=(e=>t=>{const r=e.get(t);if(void 0===r)throw new Error(\"There was no instance of an encoder stored with the given id.\");return r})(L),S=((e,t)=>r=>{const n=t(r);return e.delete(r),n})(L,P),N=new Map,C=((e,t)=>r=>{const[n,o,s,a]=t(r);return s?new Promise((t=>{o.onmessage=s=>{let{data:i}=s;0===i.length?(e(o),t(n.encode(r,null))):n.record(r,a,i)}})):n.encode(r,null)})(b,S),R=(e=>t=>{for(const[r,n]of Array.from(e.values()))if(r.test(t))return n;throw new Error(\"There is no encoder registered which could handle the given mimeType.\")})(N),$=((e,t,r)=>(n,o,s)=>{if(t.has(n))throw new Error('There is already an encoder registered with an id called \"'.concat(n,'\".'));const a=r(o),{port1:i,port2:c}=new MessageChannel,d=[a,i,!0,s];return t.set(n,d),i.onmessage=t=>{let{data:r}=t;0===r.length?(e(i),d[2]=!1):a.record(n,s,r.map((e=>\"number\"==typeof e?new Float32Array(e):e)))},c})(b,L,R),j=(e=>(t,r)=>{const[n]=e(t);return n.encode(t,r)})(P);x(self,{encode:async e=>{let{encoderId:t,timeslice:r}=e;const n=null===r?await C(t):await j(t,r);return{result:n,transferables:n}},instantiate:e=>{let{encoderId:t,mimeType:r,sampleRate:n}=e;const o=$(t,r,n);return{result:o,transferables:[o]}},register:async e=>{let{port:t}=e;return{result:await O(N,t)}}})})()})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worker.js.map","import { load as loadWorker } from 'media-encoder-host-broker';\nimport { worker } from './worker/worker';\nconst blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\nconst url = URL.createObjectURL(blob);\nconst mediaEncoderHost = loadWorker(url);\nexport const connect = mediaEncoderHost.connect;\nexport const disconnect = mediaEncoderHost.disconnect;\nexport const encode = mediaEncoderHost.encode;\nexport const instantiate = mediaEncoderHost.instantiate;\nexport const isSupported = mediaEncoderHost.isSupported;\nexport const register = mediaEncoderHost.register;\nURL.revokeObjectURL(url);\n//# sourceMappingURL=module.js.map","export const createBlobEventFactory = (nativeBlobEventConstructor) => {\n    return (type, blobEventInit) => {\n        if (nativeBlobEventConstructor === null) {\n            throw new Error('A native BlobEvent could not be created.');\n        }\n        return new nativeBlobEventConstructor(type, blobEventInit);\n    };\n};\n//# sourceMappingURL=blob-event-factory.js.map","export const createDecodeWebMChunk = (readElementContent, readElementType) => {\n    return (dataView, elementType, channelCount) => {\n        const contents = [];\n        let currentElementType = elementType;\n        let offset = 0;\n        while (offset < dataView.byteLength) {\n            if (currentElementType === null) {\n                const lengthAndType = readElementType(dataView, offset);\n                if (lengthAndType === null) {\n                    break;\n                }\n                const { length, type } = lengthAndType;\n                currentElementType = type;\n                offset += length;\n            }\n            else {\n                const contentAndLength = readElementContent(dataView, offset, currentElementType, channelCount);\n                if (contentAndLength === null) {\n                    break;\n                }\n                const { content, length } = contentAndLength;\n                currentElementType = null;\n                offset += length;\n                if (content !== null) {\n                    contents.push(content);\n                }\n            }\n        }\n        return { contents, currentElementType, offset };\n    };\n};\n//# sourceMappingURL=decode-web-m-chunk.js.map","export const createEventTargetConstructor = (createEventTarget, wrapEventListener) => {\n    return class EventTarget {\n        constructor(nativeEventTarget = null) {\n            this._listeners = new WeakMap();\n            this._nativeEventTarget = nativeEventTarget === null ? createEventTarget() : nativeEventTarget;\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createEventTargetFactory = (window) => {\n    return () => {\n        if (window === null) {\n            throw new Error('A native EventTarget could not be created.');\n        }\n        return window.document.createElement('p');\n    };\n};\n//# sourceMappingURL=event-target-factory.js.map","export const createInvalidModificationError = (message = '') => {\n    try {\n        return new DOMException(message, 'InvalidModificationError');\n    }\n    catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 13;\n        err.message = message;\n        err.name = 'InvalidModificationError';\n        return err;\n    }\n};\n//# sourceMappingURL=invalid-modification-error.js.map","export const createInvalidStateError = () => {\n    try {\n        return new DOMException('', 'InvalidStateError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 11;\n        err.name = 'InvalidStateError';\n        return err;\n    }\n};\n//# sourceMappingURL=invalid-state-error.js.map","export const createIsSupportedPromise = (window) => {\n    if (window !== null &&\n        // Bug #14: Before v14.1 Safari did not support the BlobEvent.\n        window.BlobEvent !== undefined &&\n        window.MediaStream !== undefined &&\n        /*\n         * Bug #10: An early experimental implemenation in Safari v14 did not provide the isTypeSupported() function.\n         *\n         * Bug #17: Safari up to v14.1.2 throttled the processing on hidden tabs if there was no active audio output. This is not tested\n         * here but should be covered by the following test, too.\n         */\n        (window.MediaRecorder === undefined || window.MediaRecorder.isTypeSupported !== undefined)) {\n        // Bug #11 Safari up to v14.1.2 did not support the MediaRecorder but that isn't tested here.\n        if (window.MediaRecorder === undefined) {\n            return Promise.resolve(true);\n        }\n        const canvasElement = window.document.createElement('canvas');\n        const context = canvasElement.getContext('2d');\n        if (context === null || typeof canvasElement.captureStream !== 'function') {\n            return Promise.resolve(false);\n        }\n        const mediaStream = canvasElement.captureStream();\n        return Promise.all([\n            /*\n             * Bug #5: Up until v70 Firefox did emit a blob of type video/webm when asked to encode a MediaStream with a video track into an\n             * audio codec.\n             */\n            new Promise((resolve) => {\n                const mimeType = 'audio/webm';\n                try {\n                    const mediaRecorder = new window.MediaRecorder(mediaStream, { mimeType });\n                    mediaRecorder.addEventListener('dataavailable', ({ data }) => resolve(data.type === mimeType));\n                    mediaRecorder.start();\n                    setTimeout(() => mediaRecorder.stop(), 10);\n                }\n                catch (err) {\n                    resolve(err.name === 'NotSupportedError');\n                }\n            }),\n            /*\n             * Bug #1 & #2: Up until v83 Firefox fired an error event with an UnknownError when adding or removing a track.\n             *\n             * Bug #3 & #4: Up until v112 Chrome dispatched an error event without any error.\n             *\n             * Bug #6: Up until v113 Chrome emitted a blob without any data when asked to encode a MediaStream with a video track as audio.\n             * This is not directly tested here as it can only be tested by recording something for a short time. It got fixed at the same\n             * time as #7 and #8.\n             *\n             * Bug #7 & #8: Up until v113 Chrome dispatched the dataavailable and stop events before it dispatched the error event.\n             */\n            new Promise((resolve) => {\n                const mediaRecorder = new window.MediaRecorder(mediaStream);\n                let hasDispatchedDataAvailableEvent = false;\n                let hasDispatchedStopEvent = false;\n                mediaRecorder.addEventListener('dataavailable', () => (hasDispatchedDataAvailableEvent = true));\n                mediaRecorder.addEventListener('error', (event) => {\n                    resolve(!hasDispatchedDataAvailableEvent &&\n                        !hasDispatchedStopEvent &&\n                        'error' in event &&\n                        event.error !== null &&\n                        typeof event.error === 'object' &&\n                        'name' in event.error &&\n                        event.error.name !== 'UnknownError');\n                });\n                mediaRecorder.addEventListener('stop', () => (hasDispatchedStopEvent = true));\n                mediaRecorder.start();\n                context.fillRect(0, 0, 1, 1);\n                mediaStream.removeTrack(mediaStream.getVideoTracks()[0]);\n            })\n        ]).then((results) => results.every((result) => result));\n    }\n    return Promise.resolve(false);\n};\n//# sourceMappingURL=is-supported-promise.js.map","export const createMediaRecorderConstructor = (createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, eventTargetConstructor, nativeMediaRecorderConstructor) => {\n    return class MediaRecorder extends eventTargetConstructor {\n        constructor(stream, options = {}) {\n            const { mimeType } = options;\n            if (nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                (mimeType === undefined ||\n                    (nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                        nativeMediaRecorderConstructor.isTypeSupported(mimeType)))) {\n                const internalMediaRecorder = createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                super(internalMediaRecorder);\n                this._internalMediaRecorder = internalMediaRecorder;\n            }\n            else if (mimeType !== undefined && encoderRegexes.some((regex) => regex.test(mimeType))) {\n                super();\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                if (nativeMediaRecorderConstructor !== null &&\n                    nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                    nativeMediaRecorderConstructor.isTypeSupported('audio/webm;codecs=pcm')) {\n                    this._internalMediaRecorder = createWebmPcmMediaRecorder(this, nativeMediaRecorderConstructor, stream, mimeType);\n                }\n                else {\n                    this._internalMediaRecorder = createWebAudioMediaRecorder(this, stream, mimeType);\n                }\n            }\n            else {\n                // This is creating a native MediaRecorder just to provoke it to throw an error.\n                if (nativeMediaRecorderConstructor !== null) {\n                    createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                }\n                throw createNotSupportedError();\n            }\n            this._ondataavailable = null;\n            this._onerror = null;\n            this._onpause = null;\n            this._onresume = null;\n            this._onstart = null;\n            this._onstop = null;\n        }\n        get mimeType() {\n            return this._internalMediaRecorder.mimeType;\n        }\n        get ondataavailable() {\n            return this._ondataavailable === null ? this._ondataavailable : this._ondataavailable[0];\n        }\n        set ondataavailable(value) {\n            if (this._ondataavailable !== null) {\n                this.removeEventListener('dataavailable', this._ondataavailable[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('dataavailable', boundListener);\n                this._ondataavailable = [value, boundListener];\n            }\n            else {\n                this._ondataavailable = null;\n            }\n        }\n        get onerror() {\n            return this._onerror === null ? this._onerror : this._onerror[0];\n        }\n        set onerror(value) {\n            if (this._onerror !== null) {\n                this.removeEventListener('error', this._onerror[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('error', boundListener);\n                this._onerror = [value, boundListener];\n            }\n            else {\n                this._onerror = null;\n            }\n        }\n        get onpause() {\n            return this._onpause === null ? this._onpause : this._onpause[0];\n        }\n        set onpause(value) {\n            if (this._onpause !== null) {\n                this.removeEventListener('pause', this._onpause[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('pause', boundListener);\n                this._onpause = [value, boundListener];\n            }\n            else {\n                this._onpause = null;\n            }\n        }\n        get onresume() {\n            return this._onresume === null ? this._onresume : this._onresume[0];\n        }\n        set onresume(value) {\n            if (this._onresume !== null) {\n                this.removeEventListener('resume', this._onresume[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('resume', boundListener);\n                this._onresume = [value, boundListener];\n            }\n            else {\n                this._onresume = null;\n            }\n        }\n        get onstart() {\n            return this._onstart === null ? this._onstart : this._onstart[0];\n        }\n        set onstart(value) {\n            if (this._onstart !== null) {\n                this.removeEventListener('start', this._onstart[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('start', boundListener);\n                this._onstart = [value, boundListener];\n            }\n            else {\n                this._onstart = null;\n            }\n        }\n        get onstop() {\n            return this._onstop === null ? this._onstop : this._onstop[0];\n        }\n        set onstop(value) {\n            if (this._onstop !== null) {\n                this.removeEventListener('stop', this._onstop[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('stop', boundListener);\n                this._onstop = [value, boundListener];\n            }\n            else {\n                this._onstop = null;\n            }\n        }\n        get state() {\n            return this._internalMediaRecorder.state;\n        }\n        pause() {\n            return this._internalMediaRecorder.pause();\n        }\n        resume() {\n            return this._internalMediaRecorder.resume();\n        }\n        start(timeslice) {\n            return this._internalMediaRecorder.start(timeslice);\n        }\n        stop() {\n            return this._internalMediaRecorder.stop();\n        }\n        static isTypeSupported(mimeType) {\n            return ((nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                nativeMediaRecorderConstructor.isTypeSupported(mimeType)) ||\n                encoderRegexes.some((regex) => regex.test(mimeType)));\n        }\n    };\n};\n//# sourceMappingURL=media-recorder-constructor.js.map","export const createNativeBlobEventConstructor = (window) => {\n    if (window !== null && window.BlobEvent !== undefined) {\n        return window.BlobEvent;\n    }\n    return null;\n};\n//# sourceMappingURL=native-blob-event-constructor.js.map","export const createNativeMediaRecorder = (nativeMediaRecorderConstructor, stream, mediaRecorderOptions) => {\n    const bufferedBlobEventListeners = new Map();\n    const dataAvailableListeners = new WeakMap();\n    const errorListeners = new WeakMap();\n    const nativeMediaRecorder = new nativeMediaRecorderConstructor(stream, mediaRecorderOptions);\n    const stopListeners = new WeakMap();\n    let isSliced = false;\n    nativeMediaRecorder.addEventListener = ((addEventListener) => {\n        return (type, listener, options) => {\n            let patchedEventListener = listener;\n            if (typeof listener === 'function') {\n                if (type === 'dataavailable') {\n                    const bufferedBlobEvents = [];\n                    // Bug #20: Firefox dispatches multiple dataavailable events while being inactive.\n                    patchedEventListener = (event) => {\n                        if (isSliced && nativeMediaRecorder.state === 'inactive') {\n                            bufferedBlobEvents.push(event);\n                        }\n                        else {\n                            listener.call(nativeMediaRecorder, event);\n                        }\n                    };\n                    bufferedBlobEventListeners.set(listener, bufferedBlobEvents);\n                    dataAvailableListeners.set(listener, patchedEventListener);\n                }\n                else if (type === 'error') {\n                    // Bug #12 & #13: Firefox fires a regular event with an error property.\n                    patchedEventListener = (event) => {\n                        if (event instanceof ErrorEvent) {\n                            listener.call(nativeMediaRecorder, event);\n                        }\n                        else {\n                            listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: event.error }));\n                        }\n                    };\n                    errorListeners.set(listener, patchedEventListener);\n                }\n                else if (type === 'stop') {\n                    // Bug #20: Firefox dispatches multiple dataavailable events while being inactive.\n                    patchedEventListener = (event) => {\n                        for (const [dataAvailableListener, bufferedBlobEvents] of bufferedBlobEventListeners.entries()) {\n                            if (bufferedBlobEvents.length > 0) {\n                                const [blobEvent] = bufferedBlobEvents;\n                                if (bufferedBlobEvents.length > 1) {\n                                    Object.defineProperty(blobEvent, 'data', {\n                                        value: new Blob(bufferedBlobEvents.map(({ data }) => data), { type: blobEvent.data.type })\n                                    });\n                                }\n                                bufferedBlobEvents.length = 0;\n                                dataAvailableListener.call(nativeMediaRecorder, blobEvent);\n                            }\n                        }\n                        isSliced = false;\n                        listener.call(nativeMediaRecorder, event);\n                    };\n                    stopListeners.set(listener, patchedEventListener);\n                }\n            }\n            return addEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n        };\n    })(nativeMediaRecorder.addEventListener);\n    nativeMediaRecorder.removeEventListener = ((removeEventListener) => {\n        return (type, listener, options) => {\n            let patchedEventListener = listener;\n            if (typeof listener === 'function') {\n                if (type === 'dataavailable') {\n                    bufferedBlobEventListeners.delete(listener);\n                    const dataAvailableListener = dataAvailableListeners.get(listener);\n                    if (dataAvailableListener !== undefined) {\n                        patchedEventListener = dataAvailableListener;\n                    }\n                }\n                else if (type === 'error') {\n                    const errorListener = errorListeners.get(listener);\n                    if (errorListener !== undefined) {\n                        patchedEventListener = errorListener;\n                    }\n                }\n                else if (type === 'stop') {\n                    const stopListener = stopListeners.get(listener);\n                    if (stopListener !== undefined) {\n                        patchedEventListener = stopListener;\n                    }\n                }\n            }\n            return removeEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n        };\n    })(nativeMediaRecorder.removeEventListener);\n    nativeMediaRecorder.start = ((start) => {\n        return (timeslice) => {\n            isSliced = timeslice !== undefined;\n            return timeslice === undefined ? start.call(nativeMediaRecorder) : start.call(nativeMediaRecorder, timeslice);\n        };\n    })(nativeMediaRecorder.start);\n    return nativeMediaRecorder;\n};\n//# sourceMappingURL=native-media-recorder.js.map","export const createNativeMediaRecorderConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.MediaRecorder === undefined ? null : window.MediaRecorder;\n};\n//# sourceMappingURL=native-media-recorder-constructor.js.map","export const createNotSupportedError = () => {\n    try {\n        return new DOMException('', 'NotSupportedError');\n    }\n    catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 9;\n        err.name = 'NotSupportedError';\n        return err;\n    }\n};\n//# sourceMappingURL=not-supported-error.js.map","export const createReadElementContent = (readVariableSizeInteger) => {\n    return (dataView, offset, type, channelCount = 2) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n        const { length, value } = lengthAndValue;\n        if (type === 'master') {\n            return { content: null, length };\n        }\n        if (offset + length + value > dataView.byteLength) {\n            return null;\n        }\n        if (type === 'binary') {\n            const numberOfSamples = (value / Float32Array.BYTES_PER_ELEMENT - 1) / channelCount;\n            const content = Array.from({ length: channelCount }, () => new Float32Array(numberOfSamples));\n            for (let i = 0; i < numberOfSamples; i += 1) {\n                const elementOffset = i * channelCount + 1;\n                for (let j = 0; j < channelCount; j += 1) {\n                    content[j][i] = dataView.getFloat32(offset + length + (elementOffset + j) * Float32Array.BYTES_PER_ELEMENT, true);\n                }\n            }\n            return { content, length: length + value };\n        }\n        return { content: null, length: length + value };\n    };\n};\n//# sourceMappingURL=read-element-content.js.map","export const createReadElementType = (readVariableSizeInteger) => {\n    return (dataView, offset) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n        const { length, value } = lengthAndValue;\n        if (value === 35) {\n            return { length, type: 'binary' };\n        }\n        if (value === 46 ||\n            value === 97 ||\n            value === 88713574 ||\n            value === 106212971 ||\n            value === 139690087 ||\n            value === 172351395 ||\n            value === 256095861) {\n            return { length, type: 'master' };\n        }\n        return { length, type: 'unknown' };\n    };\n};\n//# sourceMappingURL=read-element-type.js.map","export const createReadVariableSizeInteger = (readVariableSizeIntegerLength) => {\n    return (dataView, offset) => {\n        const length = readVariableSizeIntegerLength(dataView, offset);\n        if (length === null) {\n            return length;\n        }\n        const firstDataByteOffset = offset + Math.floor((length - 1) / 8);\n        if (firstDataByteOffset + length > dataView.byteLength) {\n            return null;\n        }\n        const firstDataByte = dataView.getUint8(firstDataByteOffset);\n        let value = firstDataByte & ((1 << (8 - (length % 8))) - 1); // tslint:disable-line:no-bitwise\n        for (let i = 1; i < length; i += 1) {\n            value = (value << 8) + dataView.getUint8(firstDataByteOffset + i); // tslint:disable-line:no-bitwise\n        }\n        return { length, value };\n    };\n};\n//# sourceMappingURL=read-variable-size-integer.js.map","export const observable = Symbol.observable || \"@@observable\";\r\n//# sourceMappingURL=symbols.js.map","import { observable } from \"./symbols\";\r\nexport function patch(arg) {\r\n    if (!Symbol.observable) {\r\n        if (typeof arg === \"function\" &&\r\n            arg.prototype &&\r\n            arg.prototype[Symbol.observable]) {\r\n            arg.prototype[observable] = arg.prototype[Symbol.observable];\r\n            delete arg.prototype[Symbol.observable];\r\n        }\r\n        else {\r\n            arg[observable] = arg[Symbol.observable];\r\n            delete arg[Symbol.observable];\r\n        }\r\n    }\r\n    return arg;\r\n}\r\n//# sourceMappingURL=patch.js.map","const noop = () => { };\r\nconst rethrow = (error) => {\r\n    throw error;\r\n};\r\nexport function toObserver(observer) {\r\n    if (observer) {\r\n        if (observer.next && observer.error && observer.complete) {\r\n            return observer;\r\n        }\r\n        return {\r\n            complete: (observer.complete ?? noop).bind(observer),\r\n            error: (observer.error ?? rethrow).bind(observer),\r\n            next: (observer.next ?? noop).bind(observer),\r\n        };\r\n    }\r\n    return {\r\n        complete: noop,\r\n        error: rethrow,\r\n        next: noop,\r\n    };\r\n}\r\n//# sourceMappingURL=to-observer.js.map","export const createOn = (wrapSubscribeFunction) => {\n    return (target, type, options) => wrapSubscribeFunction((observer) => {\n        const listener = (event) => observer.next(event);\n        target.addEventListener(type, listener, options);\n        return () => target.removeEventListener(type, listener, options);\n    });\n};\n//# sourceMappingURL=on.js.map","export const createWrapSubscribeFunction = (patch, toObserver) => {\n    const emptyFunction = () => { }; // tslint:disable-line:no-empty\n    const isNextFunction = (args) => typeof args[0] === 'function';\n    return (innerSubscribe) => {\n        const subscribe = ((...args) => {\n            const unsubscribe = innerSubscribe(isNextFunction(args) ? toObserver({ next: args[0] }) : toObserver(...args));\n            if (unsubscribe !== undefined) {\n                return unsubscribe;\n            }\n            return emptyFunction;\n        });\n        subscribe[Symbol.observable] = () => ({\n            subscribe: (...args) => ({ unsubscribe: subscribe(...args) })\n        });\n        return patch(subscribe);\n    };\n};\n//# sourceMappingURL=wrap-subscribe-function.js.map","import { patch, toObserver } from 'rxjs-interop';\nimport { createAnimationFrame } from './factories/animation-frame';\nimport { createAttribute } from './factories/attribute';\nimport { createGeolocation } from './factories/geolocation';\nimport { createIntersections } from './factories/intersections';\nimport { createMapSubscribableThing } from './factories/map-subscribable-thing';\nimport { createMediaDevices } from './factories/media-devices';\nimport { createMediaQueryMatch } from './factories/media-query-match';\nimport { createMetrics } from './factories/metrics';\nimport { createMidiInputs } from './factories/midi-inputs';\nimport { createMidiOutputs } from './factories/midi-outputs';\nimport { createMutations } from './factories/mutations';\nimport { createOn } from './factories/on';\nimport { createOnline } from './factories/online';\nimport { createPermissionState } from './factories/permission-state';\nimport { createPrependSubscribableThing } from './factories/prepend-subscribable-thing';\nimport { createReports } from './factories/reports';\nimport { createResizes } from './factories/resizes';\nimport { createUnhandledRejection } from './factories/unhandled-rejection';\nimport { createVideoFrame } from './factories/video-frame';\nimport { createWakeLock } from './factories/wake-lock';\nimport { createWindow } from './factories/window';\nimport { createWrapSubscribeFunction } from './factories/wrap-subscribe-function';\nimport { emitNotSupportedError } from './functions/emit-not-supported-error';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst window = createWindow();\nconst wrapSubscribeFunction = createWrapSubscribeFunction(patch, toObserver);\nexport const animationFrame = createAnimationFrame(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mutations = createMutations(emitNotSupportedError, window, wrapSubscribeFunction);\nconst mapSubscribableThing = createMapSubscribableThing(wrapSubscribeFunction);\nconst prependSubscribableThing = createPrependSubscribableThing(wrapSubscribeFunction);\nexport const attribute = createAttribute(mapSubscribableThing, mutations, prependSubscribableThing);\nexport const geolocation = createGeolocation(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const intersections = createIntersections(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaDevices = createMediaDevices(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaQueryMatch = createMediaQueryMatch(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const metrics = createMetrics(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const midiInputs = createMidiInputs(wrapSubscribeFunction);\nexport const midiOutputs = createMidiOutputs(wrapSubscribeFunction);\nexport const on = createOn(wrapSubscribeFunction);\nexport const online = createOnline(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const permissionState = createPermissionState(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const reports = createReports(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const resizes = createResizes(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const unhandledRejection = createUnhandledRejection(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const videoFrame = createVideoFrame(emitNotSupportedError, wrapSubscribeFunction);\nexport const wakeLock = createWakeLock(emitNotSupportedError, window, wrapSubscribeFunction);\n//# sourceMappingURL=module.js.map","/*!\n * dashify <https://github.com/jonschlinkert/dashify>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = (str, options) => {\n  if (typeof str !== 'string') throw new TypeError('expected a string');\n  return str.trim()\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/\\W/g, m => /[À-ž]/.test(m) ? m : '-')\n    .replace(/^-+|-+$/g, '')\n    .replace(/-{2,}/g, m => options && options.condense ? '-' : m)\n    .toLowerCase();\n};\n","/*\n * indefinite-article.js v1.0.0, 12-18-2011\n *\n * @author: Rodrigo Neri (@rigoneri)\n *\n * (The MIT License)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar indefiniteArticle = function(phrase) {\n    var i, word;\n\n    // Getting the first word\n    var match = /\\w+/.exec(phrase);\n    if (match)\n        word = match[0];\n    else\n        return \"an\";\n\n    var l_word = word.toLowerCase();\n    // Specific start of words that should be preceeded by 'an'\n    var alt_cases = [\"honest\", \"hour\", \"hono\"];\n    for (i in alt_cases) {\n        if (l_word.indexOf(alt_cases[i]) == 0)\n            return \"an\";\n    }\n\n    // Single letter word which should be preceeded by 'an'\n    if (l_word.length == 1) {\n        if (\"aedhilmnorsx\".indexOf(l_word) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Capital words which should likely be preceeded by 'an'\n    if (word.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/)) {\n        return \"an\";\n    }\n\n    // Special cases where a word that begins with a vowel should be preceeded by 'a'\n    var regexes = [/^e[uw]/, /^onc?e\\b/, /^uni([^nmd]|mo)/, /^u[bcfhjkqrst][aeiou]/];\n    for (i = 0; i < regexes.length; i++) {\n        if (l_word.match(regexes[i]))\n            return \"a\"\n    }\n\n    // Special capital words (UK, UN)\n    if (word.match(/^U[NK][AIEO]/)) {\n        return \"a\";\n    }\n    else if (word == word.toUpperCase()) {\n        if (\"aedhilmnorsx\".indexOf(l_word[0]) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Basic method of words that begin with a vowel being preceeded by 'an'\n    if (\"aeiou\".indexOf(l_word[0]) >= 0)\n        return \"an\";\n\n    // Instances where y follwed by specific letters is preceeded by 'an'\n    if (l_word.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/))\n        return \"an\";\n\n    return \"a\";\n};\n\nif ((typeof module !== 'undefined') && (typeof module.exports !== 'undefined')) {\n    module.exports = indefiniteArticle;\n} else {\n    window.indefiniteArticle = indefiniteArticle;\n}\n","import dashify from 'dashify';\nimport indefiniteArticle from 'indefinite-article';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst applyModifiers = (name, modifiers) => {\n    if (modifiers === undefined) {\n        return name;\n    }\n    return modifiers.reduce((modifiedName, modifier) => {\n        if (modifier === 'capitalize') {\n            const head = modifiedName.charAt(0).toUpperCase();\n            const tail = modifiedName.slice(1);\n            return `${head}${tail}`;\n        }\n        if (modifier === 'dashify') {\n            return dashify(modifiedName);\n        }\n        if (modifier === 'prependIndefiniteArticle') {\n            return `${indefiniteArticle(modifiedName)} ${modifiedName}`;\n        }\n        return modifiedName;\n    }, name);\n};\nconst buildRegex = (variable) => {\n    const expression = variable.name + variable.modifiers.map((modifier) => `\\\\.${modifier}\\\\(\\\\)`).join('');\n    return new RegExp(`\\\\$\\\\{${expression}}`, 'g');\n};\nconst preRenderString = (string, parameters) => {\n    const expressionRegex = /\\${([^.}]+)((\\.[^(]+\\(\\))*)}/g;\n    const variables = [];\n    let expressionResult = expressionRegex.exec(string);\n    while (expressionResult !== null) {\n        const variable = {\n            modifiers: [],\n            name: expressionResult[1]\n        };\n        if (expressionResult[3] !== undefined) {\n            const modifiersRegex = /\\.[^(]+\\(\\)/g;\n            let modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n            while (modifiersRegexResult !== null) {\n                variable.modifiers.push(modifiersRegexResult[0].slice(1, -2));\n                modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n            }\n        }\n        variables.push(variable);\n        expressionResult = expressionRegex.exec(string);\n    }\n    const preRenderedParts = variables.reduce((parts, variable) => parts\n        .map((part) => {\n        if (typeof part === 'string') {\n            return part.split(buildRegex(variable)).reduce((prts, prt, index) => {\n                if (index === 0) {\n                    return [prt];\n                }\n                if (variable.name in parameters) {\n                    return [...prts, applyModifiers(parameters[variable.name], variable.modifiers), prt];\n                }\n                return [...prts, (prmtrs) => applyModifiers(prmtrs[variable.name], variable.modifiers), prt];\n            }, []);\n        }\n        return [part];\n    })\n        .reduce((prts, part) => [...prts, ...part], []), [string]);\n    return (missingParameters) => preRenderedParts\n        .reduce((renderedParts, preRenderedPart) => {\n        if (typeof preRenderedPart === 'string') {\n            return [...renderedParts, preRenderedPart];\n        }\n        return [...renderedParts, preRenderedPart(missingParameters)];\n    }, [])\n        .join('');\n};\nexport const compile = (template, knownParameters = {}) => {\n    const renderCode = template.code === undefined ? undefined : preRenderString(template.code, knownParameters);\n    const renderMessage = template.message === undefined ? undefined : preRenderString(template.message, knownParameters);\n    function render(causeOrMissingParameters = {}, optionalCause) {\n        const hasNoOptionalCause = optionalCause === undefined &&\n            (causeOrMissingParameters instanceof Error ||\n                (causeOrMissingParameters.code !== undefined &&\n                    causeOrMissingParameters.code.slice(-9) === 'Exception'));\n        const { cause, missingParameters } = hasNoOptionalCause\n            ? {\n                cause: causeOrMissingParameters,\n                missingParameters: {}\n            }\n            : {\n                cause: optionalCause,\n                missingParameters: causeOrMissingParameters\n            };\n        const err = ((renderMessage === undefined ? new Error() : new Error(renderMessage(missingParameters))));\n        if (cause !== null) {\n            err.cause = cause;\n        }\n        if (renderCode !== undefined) {\n            err.code = renderCode(missingParameters);\n        }\n        if (template.status !== undefined) {\n            err.status = template.status;\n        }\n        return err;\n    }\n    return render;\n};\n//# sourceMappingURL=module.js.map","import { compile } from 'compilerr';\nconst JSON_RPC_ERROR_CODES = { INTERNAL_ERROR: -32603, INVALID_PARAMS: -32602, METHOD_NOT_FOUND: -32601 };\nexport const renderMethodNotFoundError = compile({\n    message: 'The requested method called \"${method}\" is not supported.',\n    status: JSON_RPC_ERROR_CODES.METHOD_NOT_FOUND\n});\nexport const renderMissingResponseError = compile({\n    message: 'The handler of the method called \"${method}\" returned no required result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport const renderUnexpectedResultError = compile({\n    message: 'The handler of the method called \"${method}\" returned an unexpected result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport const renderUnknownPortIdError = compile({\n    message: 'The specified parameter called \"portId\" with the given value \"${portId}\" does not identify a port connected to this worker.',\n    status: JSON_RPC_ERROR_CODES.INVALID_PARAMS\n});\n//# sourceMappingURL=error-renderers.js.map","export const createAddRecorderAudioWorkletModule = (blobConstructor, urlConstructor, worklet) => {\n    return async (addAudioWorkletModule) => {\n        const blob = new blobConstructor([worklet], { type: 'application/javascript; charset=utf-8' });\n        const url = urlConstructor.createObjectURL(blob);\n        try {\n            await addAudioWorkletModule(url);\n        }\n        finally {\n            urlConstructor.revokeObjectURL(url);\n        }\n    };\n};\n//# sourceMappingURL=add-recorder-audio-worklet-module.js.map","export const createListener = (ongoingRequests) => {\n    return ({ data: message }) => {\n        const { id } = message;\n        if (id !== null) {\n            const ongoingRequest = ongoingRequests.get(id);\n            if (ongoingRequest !== undefined) {\n                const { reject, resolve } = ongoingRequest;\n                ongoingRequests.delete(id);\n                if (message.error === undefined) {\n                    resolve(message.result);\n                }\n                else {\n                    reject(new Error(message.error.message));\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=listener.js.map","export const createPostMessageFactory = (generateUniqueNumber) => {\n    return (ongoingRequests, port) => {\n        return (message, transferables = []) => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n                ongoingRequests.set(id, { reject, resolve });\n                port.postMessage({ id, ...message }, transferables);\n            });\n        };\n    };\n};\n//# sourceMappingURL=post-message-factory.js.map","export const createRecorderAudioWorkletNodeFactory = (createListener, createPostMessage, on, validateState) => {\n    return (audioWorkletNodeConstructor, context, options = {}) => {\n        const audioWorkletNode = new audioWorkletNodeConstructor(context, 'recorder-audio-worklet-processor', {\n            ...options,\n            channelCountMode: 'explicit',\n            numberOfInputs: 1,\n            numberOfOutputs: 0\n        });\n        const ongoingRequests = new Map();\n        const postMessage = createPostMessage(ongoingRequests, audioWorkletNode.port);\n        const unsubscribe = on(audioWorkletNode.port, 'message')(createListener(ongoingRequests));\n        audioWorkletNode.port.start();\n        let state = 'inactive';\n        Object.defineProperties(audioWorkletNode, {\n            pause: {\n                get() {\n                    return async () => {\n                        validateState(['recording'], state);\n                        state = 'paused';\n                        return postMessage({\n                            method: 'pause'\n                        });\n                    };\n                }\n            },\n            port: {\n                get() {\n                    throw new Error(\"The port of a RecorderAudioWorkletNode can't be accessed.\");\n                }\n            },\n            record: {\n                get() {\n                    return async (encoderPort) => {\n                        validateState(['inactive'], state);\n                        state = 'recording';\n                        return postMessage({\n                            method: 'record',\n                            params: { encoderPort }\n                        }, [encoderPort]);\n                    };\n                }\n            },\n            resume: {\n                get() {\n                    return async () => {\n                        validateState(['paused'], state);\n                        state = 'recording';\n                        return postMessage({\n                            method: 'resume'\n                        });\n                    };\n                }\n            },\n            stop: {\n                get() {\n                    return async () => {\n                        validateState(['paused', 'recording'], state);\n                        state = 'stopped';\n                        try {\n                            await postMessage({ method: 'stop' });\n                        }\n                        finally {\n                            unsubscribe();\n                        }\n                    };\n                }\n            }\n        });\n        return audioWorkletNode;\n    };\n};\n//# sourceMappingURL=recorder-audio-worklet-node-factory.js.map","export const validateState = (expectedStates, currentState) => {\n    if (!expectedStates.includes(currentState)) {\n        throw new Error(`Expected the state to be ${expectedStates\n            .map((expectedState) => `\"${expectedState}\"`)\n            .join(' or ')} but it was \"${currentState}\".`);\n    }\n};\n//# sourceMappingURL=validate-state.js.map","// This is the minified and stringified code of the recorder-audio-worklet-processor package.\nexport const worklet = `(()=>{\"use strict\";class e extends AudioWorkletProcessor{constructor(){super(),this._encoderPort=null,this._numberOfChannels=0,this._state=\"inactive\",this.port.onmessage=e=>{let{data:t}=e;\"pause\"===t.method?\"active\"===this._state||\"recording\"===this._state?(this._state=\"paused\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"record\"===t.method?\"inactive\"===this._state?(this._encoderPort=t.params.encoderPort,this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"resume\"===t.method?\"paused\"===this._state?(this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"stop\"===t.method?\"active\"!==this._state&&\"paused\"!==this._state&&\"recording\"!==this._state||null===this._encoderPort?this._sendUnexpectedStateError(t.id):(this._stop(this._encoderPort),this._sendAcknowledgement(t.id)):\"number\"==typeof t.id&&this.port.postMessage({error:{code:-32601,message:\"The requested method is not supported.\"},id:t.id})}}process(e){let[t]=e;if(\"inactive\"===this._state||\"paused\"===this._state)return!0;if(\"active\"===this._state){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0===t.length)return!0;this._state=\"recording\"}if(\"recording\"===this._state&&null!==this._encoderPort){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");return 0===t.length?this._encoderPort.postMessage(Array.from({length:this._numberOfChannels},(()=>128))):(this._encoderPort.postMessage(t,t.map((e=>{let{buffer:t}=e;return t}))),this._numberOfChannels=t.length),!0}return!1}_sendAcknowledgement(e){this.port.postMessage({id:e,result:null})}_sendUnexpectedStateError(e){this.port.postMessage({error:{code:-32603,message:\"The internal state does not allow to process the given message.\"},id:e})}_stop(e){e.postMessage([]),e.close(),this._encoderPort=null,this._state=\"stopped\"}}e.parameterDescriptors=[],registerProcessor(\"recorder-audio-worklet-processor\",e)})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worklet.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { on } from 'subscribable-things';\nimport { isSupported } from 'worker-factory';\nimport { createAddRecorderAudioWorkletModule } from './factories/add-recorder-audio-worklet-module';\nimport { createListener } from './factories/listener';\nimport { createPostMessageFactory } from './factories/post-message-factory';\nimport { createRecorderAudioWorkletNodeFactory } from './factories/recorder-audio-worklet-node-factory';\nimport { validateState } from './functions/validate-state';\nimport { worklet } from './worklet/worklet';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const addRecorderAudioWorkletModule = createAddRecorderAudioWorkletModule(Blob, URL, worklet);\nexport const createRecorderAudioWorkletNode = createRecorderAudioWorkletNodeFactory(createListener, createPostMessageFactory(generateUniqueNumber), on, validateState);\nexport { isSupported };\n//# sourceMappingURL=module.js.map","export const createExtendedExponentialRampToValueAutomationEvent = (value, endTime, insertTime) => {\n    return { endTime, insertTime, type: 'exponentialRampToValue', value };\n};\n//# sourceMappingURL=create-extended-exponential-ramp-to-value-automation-event.js.map","export const createExtendedLinearRampToValueAutomationEvent = (value, endTime, insertTime) => {\n    return { endTime, insertTime, type: 'linearRampToValue', value };\n};\n//# sourceMappingURL=create-extended-linear-ramp-to-value-automation-event.js.map","export const createSetValueAutomationEvent = (value, startTime) => {\n    return { startTime, type: 'setValue', value };\n};\n//# sourceMappingURL=create-set-value-automation-event.js.map","export const createSetValueCurveAutomationEvent = (values, startTime, duration) => {\n    return { duration, startTime, type: 'setValueCurve', values };\n};\n//# sourceMappingURL=create-set-value-curve-automation-event.js.map","export const getTargetValueAtTime = (time, valueAtStartTime, { startTime, target, timeConstant }) => {\n    return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n};\n//# sourceMappingURL=get-target-value-at-time.js.map","export const isExponentialRampToValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'exponentialRampToValue';\n};\n//# sourceMappingURL=exponential-ramp-to-value-automation-event.js.map","export const isLinearRampToValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'linearRampToValue';\n};\n//# sourceMappingURL=linear-ramp-to-value-automation-event.js.map","import { isExponentialRampToValueAutomationEvent } from './exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from './linear-ramp-to-value-automation-event';\nexport const isAnyRampToValueAutomationEvent = (automationEvent) => {\n    return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n};\n//# sourceMappingURL=any-ramp-to-value-automation-event.js.map","export const isSetValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setValue';\n};\n//# sourceMappingURL=set-value-automation-event.js.map","export const isSetValueCurveAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setValueCurve';\n};\n//# sourceMappingURL=set-value-curve-automation-event.js.map","import { getTargetValueAtTime } from '../functions/get-target-value-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport const getValueOfAutomationEventAtIndexAtTime = (automationEvents, index, time, defaultValue) => {\n    const automationEvent = automationEvents[index];\n    return automationEvent === undefined\n        ? defaultValue\n        : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent)\n            ? automationEvent.value\n            : isSetValueCurveAutomationEvent(automationEvent)\n                ? automationEvent.values[automationEvent.values.length - 1]\n                : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n};\n//# sourceMappingURL=get-value-of-automation-event-at-index-at-time.js.map","import { getValueOfAutomationEventAtIndexAtTime } from '../functions/get-value-of-automation-event-at-index-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport const getEndTimeAndValueOfPreviousAutomationEvent = (automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) => {\n    return currentAutomationEvent === undefined\n        ? [nextAutomationEvent.insertTime, defaultValue]\n        : isAnyRampToValueAutomationEvent(currentAutomationEvent)\n            ? [currentAutomationEvent.endTime, currentAutomationEvent.value]\n            : isSetValueAutomationEvent(currentAutomationEvent)\n                ? [currentAutomationEvent.startTime, currentAutomationEvent.value]\n                : isSetValueCurveAutomationEvent(currentAutomationEvent)\n                    ? [\n                        currentAutomationEvent.startTime + currentAutomationEvent.duration,\n                        currentAutomationEvent.values[currentAutomationEvent.values.length - 1]\n                    ]\n                    : [\n                        currentAutomationEvent.startTime,\n                        getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)\n                    ];\n};\n//# sourceMappingURL=get-end-time-and-value-of-previous-automation-event.js.map","export const isCancelAndHoldAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'cancelAndHold';\n};\n//# sourceMappingURL=cancel-and-hold-automation-event.js.map","export const isCancelScheduledValuesAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'cancelScheduledValues';\n};\n//# sourceMappingURL=cancel-scheduled-values-automation-event.js.map","import { isCancelAndHoldAutomationEvent } from '../guards/cancel-and-hold-automation-event';\nimport { isCancelScheduledValuesAutomationEvent } from '../guards/cancel-scheduled-values-automation-event';\nimport { isExponentialRampToValueAutomationEvent } from '../guards/exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from '../guards/linear-ramp-to-value-automation-event';\nexport const getEventTime = (automationEvent) => {\n    if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n    }\n    if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n    }\n    return automationEvent.startTime;\n};\n//# sourceMappingURL=get-event-time.js.map","export const getExponentialRampValueAtTime = (time, startTime, valueAtStartTime, { endTime, value }) => {\n    if (valueAtStartTime === value) {\n        return value;\n    }\n    if ((0 < valueAtStartTime && 0 < value) || (valueAtStartTime < 0 && value < 0)) {\n        return valueAtStartTime * (value / valueAtStartTime) ** ((time - startTime) / (endTime - startTime));\n    }\n    return 0;\n};\n//# sourceMappingURL=get-exponential-ramp-value-at-time.js.map","export const getLinearRampValueAtTime = (time, startTime, valueAtStartTime, { endTime, value }) => {\n    return valueAtStartTime + ((time - startTime) / (endTime - startTime)) * (value - valueAtStartTime);\n};\n//# sourceMappingURL=get-linear-ramp-value-at-time.js.map","export const interpolateValue = (values, theoreticIndex) => {\n    const lowerIndex = Math.floor(theoreticIndex);\n    const upperIndex = Math.ceil(theoreticIndex);\n    if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n    }\n    return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n};\n//# sourceMappingURL=interpolate-value.js.map","import { interpolateValue } from './interpolate-value';\nexport const getValueCurveValueAtTime = (time, { duration, startTime, values }) => {\n    const theoreticIndex = ((time - startTime) / duration) * (values.length - 1);\n    return interpolateValue(values, theoreticIndex);\n};\n//# sourceMappingURL=get-value-curve-value-at-time.js.map","export const isSetTargetAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setTarget';\n};\n//# sourceMappingURL=set-target-automation-event.js.map","import { createExtendedExponentialRampToValueAutomationEvent } from '../functions/create-extended-exponential-ramp-to-value-automation-event';\nimport { createExtendedLinearRampToValueAutomationEvent } from '../functions/create-extended-linear-ramp-to-value-automation-event';\nimport { createSetValueAutomationEvent } from '../functions/create-set-value-automation-event';\nimport { createSetValueCurveAutomationEvent } from '../functions/create-set-value-curve-automation-event';\nimport { getEndTimeAndValueOfPreviousAutomationEvent } from '../functions/get-end-time-and-value-of-previous-automation-event';\nimport { getEventTime } from '../functions/get-event-time';\nimport { getExponentialRampValueAtTime } from '../functions/get-exponential-ramp-value-at-time';\nimport { getLinearRampValueAtTime } from '../functions/get-linear-ramp-value-at-time';\nimport { getTargetValueAtTime } from '../functions/get-target-value-at-time';\nimport { getValueCurveValueAtTime } from '../functions/get-value-curve-value-at-time';\nimport { getValueOfAutomationEventAtIndexAtTime } from '../functions/get-value-of-automation-event-at-index-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isCancelAndHoldAutomationEvent } from '../guards/cancel-and-hold-automation-event';\nimport { isCancelScheduledValuesAutomationEvent } from '../guards/cancel-scheduled-values-automation-event';\nimport { isExponentialRampToValueAutomationEvent } from '../guards/exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from '../guards/linear-ramp-to-value-automation-event';\nimport { isSetTargetAutomationEvent } from '../guards/set-target-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport class AutomationEventList {\n    constructor(defaultValue) {\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n    }\n    [Symbol.iterator]() {\n        return this._automationEvents[Symbol.iterator]();\n    }\n    add(automationEvent) {\n        const eventTime = getEventTime(automationEvent);\n        if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            const index = this._automationEvents.findIndex((currentAutomationEvent) => {\n                if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                    return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n                }\n                return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n            const removedAutomationEvent = this._automationEvents[index];\n            if (index !== -1) {\n                this._automationEvents = this._automationEvents.slice(0, index);\n            }\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n                const lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n                if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                    if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                        throw new Error('The internal list is malformed.');\n                    }\n                    const startTime = lastAutomationEvent === undefined\n                        ? removedAutomationEvent.insertTime\n                        : isSetValueCurveAutomationEvent(lastAutomationEvent)\n                            ? lastAutomationEvent.startTime + lastAutomationEvent.duration\n                            : getEventTime(lastAutomationEvent);\n                    const startValue = lastAutomationEvent === undefined\n                        ? this._defaultValue\n                        : isSetValueCurveAutomationEvent(lastAutomationEvent)\n                            ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1]\n                            : lastAutomationEvent.value;\n                    const value = isExponentialRampToValueAutomationEvent(removedAutomationEvent)\n                        ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent)\n                        : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                    const truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent)\n                        ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime)\n                        : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n                    this._automationEvents.push(truncatedAutomationEvent);\n                }\n                if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                    this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n                }\n                if (lastAutomationEvent !== undefined &&\n                    isSetValueCurveAutomationEvent(lastAutomationEvent) &&\n                    lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                    const duration = eventTime - lastAutomationEvent.startTime;\n                    const ratio = (lastAutomationEvent.values.length - 1) / lastAutomationEvent.duration;\n                    const length = Math.max(2, 1 + Math.ceil(duration * ratio));\n                    const fraction = (duration / (length - 1)) * ratio;\n                    const values = lastAutomationEvent.values.slice(0, length);\n                    if (fraction < 1) {\n                        for (let i = 1; i < length; i += 1) {\n                            const factor = (fraction * i) % 1;\n                            values[i] = lastAutomationEvent.values[i - 1] * (1 - factor) + lastAutomationEvent.values[i] * factor;\n                        }\n                    }\n                    this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(values, lastAutomationEvent.startTime, duration);\n                }\n            }\n        }\n        else {\n            const index = this._automationEvents.findIndex((currentAutomationEvent) => getEventTime(currentAutomationEvent) > eventTime);\n            const previousAutomationEvent = index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[index - 1];\n            if (previousAutomationEvent !== undefined &&\n                isSetValueCurveAutomationEvent(previousAutomationEvent) &&\n                getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n                return false;\n            }\n            const persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent)\n                ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime)\n                : isLinearRampToValueAutomationEvent(automationEvent)\n                    ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime)\n                    : automationEvent;\n            if (index === -1) {\n                this._automationEvents.push(persistentAutomationEvent);\n            }\n            else {\n                if (isSetValueCurveAutomationEvent(automationEvent) &&\n                    eventTime + automationEvent.duration > getEventTime(this._automationEvents[index])) {\n                    return false;\n                }\n                this._automationEvents.splice(index, 0, persistentAutomationEvent);\n            }\n        }\n        return true;\n    }\n    flush(time) {\n        const index = this._automationEvents.findIndex((currentAutomationEvent) => getEventTime(currentAutomationEvent) > time);\n        if (index > 1) {\n            const remainingAutomationEvents = this._automationEvents.slice(index - 1);\n            const firstRemainingAutomationEvent = remainingAutomationEvents[0];\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n                remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n            this._automationEvents = remainingAutomationEvents;\n        }\n    }\n    getValue(time) {\n        if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n        }\n        const indexOfNextEvent = this._automationEvents.findIndex((automationEvent) => getEventTime(automationEvent) > time);\n        const nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n        const indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n        const currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n        if (currentAutomationEvent !== undefined &&\n            isSetTargetAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined ||\n                !isAnyRampToValueAutomationEvent(nextAutomationEvent) ||\n                nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n        }\n        if (currentAutomationEvent !== undefined &&\n            isSetValueAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n        }\n        if (currentAutomationEvent !== undefined &&\n            isSetValueCurveAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined ||\n                !isAnyRampToValueAutomationEvent(nextAutomationEvent) ||\n                currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n                return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n        }\n        if (currentAutomationEvent !== undefined &&\n            isAnyRampToValueAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n        }\n        if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            const [startTime, value] = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue);\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n        if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            const [startTime, value] = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue);\n            return getLinearRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n        return this._defaultValue;\n    }\n}\n//# sourceMappingURL=automation-event-list.js.map","export const createCancelAndHoldAutomationEvent = (cancelTime) => {\n    return { cancelTime, type: 'cancelAndHold' };\n};\n//# sourceMappingURL=create-cancel-and-hold-automation-event.js.map","export const createCancelScheduledValuesAutomationEvent = (cancelTime) => {\n    return { cancelTime, type: 'cancelScheduledValues' };\n};\n//# sourceMappingURL=create-cancel-scheduled-values-automation-event.js.map","export const createExponentialRampToValueAutomationEvent = (value, endTime) => {\n    return { endTime, type: 'exponentialRampToValue', value };\n};\n//# sourceMappingURL=create-exponential-ramp-to-value-automation-event.js.map","export const createLinearRampToValueAutomationEvent = (value, endTime) => {\n    return { endTime, type: 'linearRampToValue', value };\n};\n//# sourceMappingURL=create-linear-ramp-to-value-automation-event.js.map","export const createSetTargetAutomationEvent = (target, startTime, timeConstant) => {\n    return { startTime, target, timeConstant, type: 'setTarget' };\n};\n//# sourceMappingURL=create-set-target-automation-event.js.map","export const createAbortError = () => new DOMException('', 'AbortError');\n//# sourceMappingURL=abort-error.js.map","export const createAddActiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n    };\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-node.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=add-audio-node-connections.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=add-audio-param-connections.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=globals.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=is-constructible.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=split-import-statements.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) => {\n    let index = 0;\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const nativeContext = getNativeContext(context);\n        // Bug #59: Safari does not implement the audioWorklet property.\n        const promise = nativeContext.audioWorklet === undefined\n            ? fetchSource(moduleURL)\n                .then(([source, absoluteUrl]) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * ${ importStatements };\n                 * ((a, b) => {\n                 *     (a[b] = a[b] || [ ]).push(\n                 *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n                 *             ${ sourceWithoutImportStatements }\n                 *         }\n                 *     );\n                 * })(window, '_AWGS');\n                 * ```\n                 */\n                // tslint:disable-next-line:max-line-length\n                const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n                // @todo Evaluating the given source code is a possible security problem.\n                return evaluateSource(wrappedSource);\n            })\n                .then(() => {\n                const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n                if (evaluateAudioWorkletGlobalScope === undefined) {\n                    // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                    throw new SyntaxError();\n                }\n                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n                }, undefined, (name, processorCtor) => {\n                    if (name.trim() === '') {\n                        throw createNotSupportedError();\n                    }\n                    const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                    if (nodeNameToProcessorConstructorMap !== undefined) {\n                        if (nodeNameToProcessorConstructorMap.has(name)) {\n                            throw createNotSupportedError();\n                        }\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                    }\n                    else {\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                    }\n                }, nativeContext.sampleRate, undefined, undefined));\n            })\n            : Promise.all([\n                fetchSource(moduleURL),\n                Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))\n            ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                const currentIndex = index + 1;\n                index = currentIndex;\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below.\n                 *\n                 * ```js\n                 * class extends AudioWorkletProcessor {\n                 *\n                 *     __buffers = new WeakSet();\n                 *\n                 *     constructor () {\n                 *         super();\n                 *\n                 *         this.port.postMessage = ((postMessage) => {\n                 *             return (message, transferables) => {\n                 *                 const filteredTransferables = (transferables)\n                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                 *                     : transferables;\n                 *\n                 *                 return postMessage.call(this.port, message, filteredTransferables);\n                 *              };\n                 *         })(this.port.postMessage);\n                 *     }\n                 * }\n                 * ```\n                 */\n                const patchedAudioWorkletProcessor = isSupportingPostMessage\n                    ? 'AudioWorkletProcessor'\n                    : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}';\n                /*\n                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                 *\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((AudioWorkletProcessor, registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })(\n                 *     ${ patchedAudioWorkletProcessor },\n                 *     (name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *         __collectBuffers = (array) => {\n                 *             array.forEach((element) => this.__buffers.add(element.buffer));\n                 *         };\n                 *\n                 *         process (inputs, outputs, parameters) {\n                 *             inputs.forEach(this.__collectBuffers);\n                 *             outputs.forEach(this.__collectBuffers);\n                 *             this.__collectBuffers(Object.values(parameters));\n                 *\n                 *             return super.process(\n                 *                 (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *                 outputs,\n                 *                 parameters\n                 *             );\n                 *         }\n                 *\n                 *     })\n                 * );\n                 *\n                 * registerProcessor(`__sac${currentIndex}`, class extends AudioWorkletProcessor{\n                 *\n                 *     process () {\n                 *         return false;\n                 *     }\n                 *\n                 * })`\n                 * ```\n                 */\n                const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                const bufferRegistration = isSupportingPostMessage\n                    ? ''\n                    : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}\n})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                return nativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => {\n                    if (isNativeOfflineAudioContext(nativeContext)) {\n                        return nativeContext;\n                    }\n                    // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n                    const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n                    return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(() => backupOfflineAudioContext);\n                })\n                    .then((nativeContextOrBackupOfflineAudioContext) => {\n                    if (nativeAudioWorkletNodeConstructor === null) {\n                        throw new SyntaxError();\n                    }\n                    try {\n                        // Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                        new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`); // tslint:disable-line:no-unused-expression\n                    }\n                    catch {\n                        throw new SyntaxError();\n                    }\n                })\n                    .finally(() => URL.revokeObjectURL(url));\n            });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const updatedResolvedRequestsOfContext = resolvedRequests.get(context);\n            if (updatedResolvedRequestsOfContext === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                updatedResolvedRequestsOfContext.add(moduleURL);\n            }\n        })\n            .finally(() => {\n            const updatedOngoingRequestsOfContext = ongoingRequests.get(context);\n            if (updatedOngoingRequestsOfContext !== undefined) {\n                updatedOngoingRequestsOfContext.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=add-audio-worklet-module.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=get-value-for-key.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=pick-element-from-set.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-node.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=get-event-listeners-of-audio-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=set-internal-state-to-active.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=audio-worklet-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=set-internal-state-to-passive.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=set-internal-state-to-passive-when-necessary.js.map","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nexport const createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) => {\n    const tailTimeTimeoutIds = new WeakMap();\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n        const eventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            }\n            else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                const tailTime = getAudioNodeTailTime(destination);\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                }\n                else {\n                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n                    if (tailTimeTimeoutId !== undefined) {\n                        clearTimeout(tailTimeTimeoutId);\n                    }\n                    tailTimeTimeoutIds.set(destination, setTimeout(() => {\n                        if (isActiveAudioNode(destination)) {\n                            setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                        }\n                    }, tailTime * 1000));\n                }\n            }\n        };\n        if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n            eventListeners.add(eventListener);\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            }\n            else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=add-connection-to-audio-node.js.map","export const createAddPassiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        }\n        else {\n            insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n        }\n    };\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-node.js.map","export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=add-silent-connection.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=add-unrendered-audio-worklet-node.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=is-owned-by-context.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const createIndexSizeError = () => new DOMException('', 'IndexSizeError');\n//# sourceMappingURL=index-size-error.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=wrap-audio-buffer-get-channel-data-method.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-constructor.js.map","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=constants.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=is-active-audio-node.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline ? createAudioBufferSourceNodeRenderer() : null));\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n            // Bug #72: Only Chrome & Edge do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map","export const isAudioBufferSourceNode = (audioNode) => {\n    return 'playbackRate' in audioNode;\n};\n//# sourceMappingURL=audio-buffer-source-node.js.map","export const isBiquadFilterNode = (audioNode) => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n//# sourceMappingURL=biquad-filter-node.js.map","export const isConstantSourceNode = (audioNode) => {\n    return 'offset' in audioNode;\n};\n//# sourceMappingURL=constant-source-node.js.map","export const isGainNode = (audioNode) => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n//# sourceMappingURL=gain-node.js.map","export const isOscillatorNode = (audioNode) => {\n    return 'detune' in audioNode && 'frequency' in audioNode;\n};\n//# sourceMappingURL=oscillator-node.js.map","export const isStereoPannerNode = (audioNode) => {\n    return 'pan' in audioNode;\n};\n//# sourceMappingURL=stereo-panner-node.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=get-audio-param-connections.js.map","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\nexport const deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n    activeInputs.forEach((connections) => connections.forEach(([source]) => {\n        if (!trace.includes(audioNode)) {\n            deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n        }\n    }));\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n            // Bug #149: Safari does not yet support the detune AudioParam.\n            audioNode.playbackRate\n        ]\n        : isAudioWorkletNode(audioNode)\n            ? Array.from(audioNode.parameters.values())\n            : isBiquadFilterNode(audioNode)\n                ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n                : isConstantSourceNode(audioNode)\n                    ? [audioNode.offset]\n                    : isGainNode(audioNode)\n                        ? [audioNode.gain]\n                        : isOscillatorNode(audioNode)\n                            ? [audioNode.detune, audioNode.frequency]\n                            : isStereoPannerNode(audioNode)\n                                ? [audioNode.pan]\n                                : [];\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=deactivate-active-audio-node-input-connections.js.map","import { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\nexport const deactivateAudioGraph = (context) => {\n    deactivateActiveAudioNodeInputConnections(context.destination, []);\n};\n//# sourceMappingURL=deactivate-audio-graph.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return (latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback')));\n};\n//# sourceMappingURL=is-valid-latency-hint.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    const renderedNativeAudioDestinationNodes = new WeakMap();\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext) {\n            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n            if (renderedNativeAudioDestinationNode !== undefined) {\n                return Promise.resolve(renderedNativeAudioDestinationNode);\n            }\n            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome & Edge support the new interface already.\n        const createFakeAudioParams = () => {\n            const buffer = new Float32Array(1);\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            let isScriptProcessorNodeCreated = false;\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            const createScriptProcessorNode = () => {\n                if (isScriptProcessorNodeCreated) {\n                    return;\n                }\n                isScriptProcessorNodeCreated = true;\n                const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n                // tslint:disable-next-line:deprecation\n                scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                    const orientation = [\n                        getFirstSample(inputBuffer, buffer, 0),\n                        getFirstSample(inputBuffer, buffer, 1),\n                        getFirstSample(inputBuffer, buffer, 2),\n                        getFirstSample(inputBuffer, buffer, 3),\n                        getFirstSample(inputBuffer, buffer, 4),\n                        getFirstSample(inputBuffer, buffer, 5)\n                    ];\n                    if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                        nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                        lastOrientation = orientation;\n                    }\n                    const positon = [\n                        getFirstSample(inputBuffer, buffer, 6),\n                        getFirstSample(inputBuffer, buffer, 7),\n                        getFirstSample(inputBuffer, buffer, 8)\n                    ];\n                    if (positon.some((value, index) => value !== lastPosition[index])) {\n                        nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                        lastPosition = positon;\n                    }\n                };\n                channelMergerNode.connect(scriptProcessorNode);\n            };\n            const createSetOrientation = (index) => (value) => {\n                if (value !== lastOrientation[index]) {\n                    lastOrientation[index] = value;\n                    nativeListener.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n                }\n            };\n            const createSetPosition = (index) => (value) => {\n                if (value !== lastPosition[index]) {\n                    lastPosition[index] = value;\n                    nativeListener.setPosition(...lastPosition); // tslint:disable-line:deprecation\n                }\n            };\n            const createFakeAudioParam = (input, initialValue, setValue) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: initialValue\n                });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return initialValue;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                const audioParam = createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n                overwriteAccessors(audioParam, 'value', (get) => () => get.call(audioParam), (set) => (value) => {\n                    try {\n                        set.call(audioParam, value);\n                    }\n                    catch (err) {\n                        if (err.code !== 9) {\n                            throw err;\n                        }\n                    }\n                    createScriptProcessorNode();\n                    if (isOffline) {\n                        // Bug #117: Using setOrientation() and setPosition() doesn't work with an OfflineAudioContext.\n                        setValue(value);\n                    }\n                });\n                audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelAndHoldAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelAndHoldAtTime);\n                audioParam.cancelScheduledValues = ((cancelScheduledValues) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelScheduledValues.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelScheduledValues);\n                audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = exponentialRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.exponentialRampToValueAtTime);\n                audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = linearRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.linearRampToValueAtTime);\n                audioParam.setTargetAtTime = ((setTargetAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setTargetAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setTargetAtTime);\n                audioParam.setValueAtTime = ((setValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueAtTime);\n                audioParam.setValueCurveAtTime = ((setValueCurveAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueCurveAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueCurveAtTime);\n                return audioParam;\n            };\n            return {\n                forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),\n                forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),\n                forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),\n                positionX: createFakeAudioParam(6, 0, createSetPosition(0)),\n                positionY: createFakeAudioParam(7, 0, createSetPosition(1)),\n                positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),\n                upX: createFakeAudioParam(3, 0, createSetOrientation(3)),\n                upY: createFakeAudioParam(4, 1, createSetOrientation(4)),\n                upZ: createFakeAudioParam(5, 0, createSetOrientation(5))\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-listener-factory.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=audio-node.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=audio-node-output-connection.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=insert-element-in-set.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-param.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);\n    }\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-param.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=native-audio-node-faker.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=connect-native-audio-node-to-native-audio-node.js.map","export const deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\n//# sourceMappingURL=delete-active-input-connection.js.map","import { pickElementFromSet } from './pick-element-from-set';\nexport const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-param.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=delete-event-listeners-of-audio-node.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-param.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=get-native-audio-param.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=is-passive-audio-node.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return new Promise((resolve) => {\n        /*\n         * This bug existed in Safari up until v14.0.2. Since AudioWorklets were not supported in Safari until v14.1 the presence of the\n         * constructor for an AudioWorkletNode can be used here to skip the test.\n         */\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            resolve(true);\n        }\n        else {\n            const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1); // tslint:disable-line deprecation\n            const dummy = nativeAudioContext.createGain();\n            // Bug #95: Safari does not play one sample buffers.\n            const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n            const channelData = ones.getChannelData(0);\n            channelData[0] = 1;\n            channelData[1] = 1;\n            const source = nativeAudioContext.createBufferSource();\n            source.buffer = ones;\n            source.loop = true;\n            source.connect(analyzer).connect(nativeAudioContext.destination);\n            source.connect(dummy);\n            source.disconnect(dummy);\n            // tslint:disable-next-line:deprecation\n            analyzer.onaudioprocess = (event) => {\n                const chnnlDt = event.inputBuffer.getChannelData(0); // tslint:disable-line deprecation\n                if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                    resolve(true);\n                }\n                else {\n                    resolve(false);\n                }\n                source.stop();\n                analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n                source.disconnect(analyzer);\n                analyzer.disconnect(nativeAudioContext.destination);\n            };\n            source.start();\n        }\n    });\n};\n//# sourceMappingURL=test-audio-node-disconnect-method-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=visit-each-audio-node-once.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=native-audio-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        // tslint:disable-next-line:invalid-void no-inferrable-types\n        return (destination, output = 0, input = 0) => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=wrap-audio-node-disconnect-method.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, isOffline, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source, isOffline) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, isOffline, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, isOffline, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => outputConnection[0] === destination &&\n        (output === undefined || outputConnection[1] === output) &&\n        (input === undefined || outputConnection[2] === input))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor);\n                    })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        // tslint:disable-next-line:invalid-void\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    const isPassive = isPassiveAudioNode(this);\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n             */\n            if (nativeAudioParam.name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Safari doesn't throw an InvalidAccessError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-node-constructor.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        // Bug #196 Only Safari sets the defaultValue to the initial value.\n        const defaultValue = nativeAudioParam.value;\n        const automationEventList = new AutomationEventList(defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return defaultValue;\n            },\n            get maxValue() {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array.from(automationEventList).pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n                const currentTime = audioNode.context.currentTime;\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(currentTime);\n                }\n                // Bug #194: Firefox does not implicitly call setValueAtTime() if there is no previous event.\n                if (Array.from(automationEventList).length === 0) {\n                    automationEventList.add(createSetValueAutomationEvent(defaultValue, currentTime));\n                    nativeAudioParam.setValueAtTime(defaultValue, currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                const currentTime = audioNode.context.currentTime;\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(currentTime);\n                }\n                // Bug #195: Firefox does not implicitly call setValueAtTime() if there is no previous event.\n                if (Array.from(automationEventList).length === 0) {\n                    automationEventList.add(createSetValueAutomationEvent(defaultValue, currentTime));\n                    nativeAudioParam.setValueAtTime(defaultValue, currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=audio-param-factory.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-param-renderer.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=read-only-map.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options) {\n            var _a;\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n            // Bug #191: Safari doesn't throw an error if the options aren't clonable.\n            testAudioWorkletNodeOptionsClonability(mergedOptions);\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);\n            // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== 'closed'\n                ? nativeContext\n                : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null));\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n            const { activeInputs } = getAudioNodeConnections(this);\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=audio-worklet-node-constructor.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=copy-to-channel.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = typeof y === 'number' ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=create-nested-arrays.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-audio-worklet-processor.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = numberOfOutputChannels === 0\n        ? null\n        : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', {\n                colno: error.colno,\n                filename: error.filename,\n                lineno: error.lineno,\n                message: error.message\n            }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n            // Bug #61: Only Chrome, Edge & Firefox have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=cache-test-result.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=connect-audio-param.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=connect-multiple-outputs.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=convert-number-to-unsigned-long.js.map","export const createDataCloneError = () => new DOMException('', 'DataCloneError');\n//# sourceMappingURL=data-clone-error.js.map","export const detachArrayBuffer = (arrayBuffer) => {\n    const { port1, port2 } = new MessageChannel();\n    return new Promise((resolve) => {\n        const closeAndResolve = () => {\n            port2.onmessage = null;\n            port1.close();\n            port2.close();\n            resolve();\n        };\n        port2.onmessage = () => closeAndResolve();\n        try {\n            port1.postMessage(arrayBuffer, [arrayBuffer]);\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            closeAndResolve();\n        }\n    });\n};\n//# sourceMappingURL=detach-array-buffer.js.map","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n        // Bug #43: Only Chrome and Edge do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n            return Promise.reject(err);\n        }\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        }\n        catch {\n            // Ignore errors.\n        }\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                detachArrayBuffer(audioData).catch(() => {\n                    // Ignore errors.\n                });\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n                audioBufferStore.add(audioBuffer);\n                return audioBuffer;\n            });\n        }\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = async () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    await detachArrayBuffer(audioData);\n                }\n                catch {\n                    // Ignore errors.\n                }\n            };\n            const fail = (err) => {\n                reject(err);\n                complete();\n            };\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                    if (typeof audioBuffer.copyFromChannel !== 'function') {\n                        wrapAudioBufferCopyChannelMethods(audioBuffer);\n                        wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    }\n                    audioBufferStore.add(audioBuffer);\n                    complete().then(() => resolve(audioBuffer));\n                }, (err) => {\n                    // Bug #4: Safari returns null instead of an error.\n                    if (err === null) {\n                        fail(createEncodingError());\n                    }\n                    else {\n                        fail(err);\n                    }\n                });\n            }\n            catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n//# sourceMappingURL=decode-audio-data.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=decrement-cycle-counter.js.map","export const createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n    };\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-node.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=delete-unrendered-audio-worklet-node.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=delay-node.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=detect-cycles.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=disconnect-multiple-outputs.js.map","export const createEncodingError = () => new DOMException('', 'EncodingError');\n//# sourceMappingURL=encoding-error.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=evaluate-source.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=expose-current-frame-and-current-time.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        }\n        catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=fetch-source.js.map","export const createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey) => {\n    return (nativeAudioWorkletNode) => getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-active-audio-worklet-node-inputs.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-node-renderer.js.map","export const createGetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode) => { var _a; return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0; };\n};\n//# sourceMappingURL=get-audio-node-tail-time.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-param-renderer.js.map","export const createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n//# sourceMappingURL=get-backup-offline-audio-context.js.map","export const createInvalidStateError = () => new DOMException('', 'InvalidStateError');\n//# sourceMappingURL=invalid-state-error.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return (nativeContext);\n    };\n};\n//# sourceMappingURL=get-native-context.js.map","export const createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n        return backupOfflineAudioContext;\n    };\n};\n//# sourceMappingURL=get-or-create-backup-offline-audio-context.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=get-unrendered-audio-worklet-nodes.js.map","export const createInvalidAccessError = () => new DOMException('', 'InvalidAccessError');\n//# sourceMappingURL=invalid-access-error.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=increment-cycle-counter-factory.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n//# sourceMappingURL=is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n//# sourceMappingURL=is-native-audio-param.js.map","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-native-context.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-offline-audio-context.js.map","export const createIsSecureContext = (window) => window !== null && window.isSecureContext;\n//# sourceMappingURL=is-secure-context.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            let nativeAudioContext;\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            }\n            catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=minimal-audio-context-constructor.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=test-promise-support.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            // tslint:disable-next-line:invalid-void no-inferrable-types\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=monitor-connections.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=assign-native-audio-node-options.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=native-audio-buffer-constructor.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-audio-param-value.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=native-audio-context-constructor.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=native-audio-destination-node.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=native-audio-worklet-node-constructor.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=test-clonability-of-audio-worklet-node-options.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);\n                const patchedEventListeners = new Map();\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = typeof value === 'function' ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = typeof args[1] === 'function'\n                                ? args[1]\n                                : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        // Bug #178: Chrome and Edge do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n                                            unpatchedEventListener(event);\n                                        }\n                                        else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome & Edge throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Edge have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-factory.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=compute-buffer-size.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=clone-audio-worklet-node-options.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=create-audio-worklet-processor-promise.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=create-audio-worklet-processor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: options.parameterData[name] !== undefined\n                        ? options.parameterData[name]\n                        : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = typeof value === 'function' ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map();\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = typeof args[1] === 'function'\n                        ? args[1]\n                        : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = typeof value === 'function' ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters = processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n        const activeInputIndexes = new Map();\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n                                return input;\n                            }\n                            const count = activeInputIndexes.get(index);\n                            if (count === undefined) {\n                                return [];\n                            }\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                }\n                                else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {\n                            colno: error.colno,\n                            filename: error.filename,\n                            lineno: error.lineno,\n                            message: error.message\n                        }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=native-channel-merger-node-factory.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=wrap-channel-splitter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNode = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge & Firefox partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n    return nativeChannelSplitterNode;\n};\n//# sourceMappingURL=native-channel-splitter-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=native-constant-source-node-factory.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=intercept-connections.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-constant-source-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNode = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n    return nativeGainNode;\n};\n//# sourceMappingURL=native-gain-node.js.map","export const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n    return nativeMediaStreamAudioSourceNode;\n};\n//# sourceMappingURL=native-media-stream-audio-source-node.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=native-offline-audio-context-constructor.js.map","export const createNativePeriodicWaveFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n        return nativePeriodicWave;\n    };\n};\n//# sourceMappingURL=native-periodic-wave-factory.js.map","export const createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels); // tslint:disable-line deprecation\n};\n//# sourceMappingURL=native-script-processor-node.js.map","export const createNotSupportedError = () => new DOMException('', 'NotSupportedError');\n//# sourceMappingURL=not-supported-error.js.map","const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=periodic-wave-constructor.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=render-automation.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        await Promise.all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array.from(connections).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-node.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-param.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=render-native-offline-audio-context.js.map","export const createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n//# sourceMappingURL=set-active-audio-worklet-node-inputs.js.map","// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-constructor-support.js.map","// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n        const url = URL.createObjectURL(blob);\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n            await offlineAudioContext.startRendering();\n            // Bug #197: Safari does not deliver the messages before the promise returned by startRendering() resolves.\n            await new Promise((resolve) => setTimeout(resolve));\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=test-offline-audio-context-current-time-support.js.map","export const createUnknownError = () => new DOMException('', 'UnknownError');\n//# sourceMappingURL=unknown-error.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return value === nullifiedBuffer ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=wrap-channel-merger-node.js.map","export const getFirstSample = (audioBuffer, buffer, channelNumber) => {\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    if (audioBuffer.copyFromChannel === undefined) {\n        return audioBuffer.getChannelData(channelNumber)[0];\n    }\n    audioBuffer.copyFromChannel(buffer, channelNumber);\n    return buffer[0];\n};\n//# sourceMappingURL=get-first-sample.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = object;\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=overwrite-accessors.js.map","export const sanitizeAudioWorkletNodeOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: options.outputChannelCount !== undefined\n            ? options.outputChannelCount\n            : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                    [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n//# sourceMappingURL=sanitize-audio-worklet-node-options.js.map","export const sanitizePeriodicWaveOptions = (options) => {\n    const { imag, real } = options;\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n    return { ...options, imag, real };\n};\n//# sourceMappingURL=sanitize-periodic-wave-options.js.map","export const setValueAtTimeUntilPossible = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    }\n    catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n//# sourceMappingURL=set-value-at-time-until-possible.js.map","export const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.start();\n    }\n    catch {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","export const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.stop();\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n    try {\n        nativeAudioBufferSourceNode.stop();\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","export const testAudioWorkletNodeOptionsClonability = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n        port2.close();\n    }\n};\n//# sourceMappingURL=test-audio-worklet-node-options-clonability.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","import { interceptConnections } from './intercept-connections';\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {\n    const nativeGainNode = nativeContext.createGain();\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                }\n                catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            }\n            else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getFirstSample } from './helpers/get-first-sample';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testAudioWorkletNodeOptionsClonability } from './helpers/test-audio-worklet-node-options-clonability';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode), cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet(), sanitizePeriodicWaveOptions);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = isSecureContext\n    ? createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, new WeakMap(), new WeakMap(), createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window)\n    : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener)\n    : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor), testDomExceptionConstructorSupport, createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=module.js.map","import { encode, instantiate } from 'media-encoder-host';\nimport { addRecorderAudioWorkletModule, createRecorderAudioWorkletNode } from 'recorder-audio-worklet';\nimport { AudioBuffer, AudioBufferSourceNode, AudioWorkletNode, MediaStreamAudioSourceNode, MinimalAudioContext, addAudioWorkletModule } from 'standardized-audio-context';\nconst ERROR_MESSAGE = 'Missing AudioWorklet support. Maybe this is not running in a secure context.';\n// @todo This should live in a separate file.\nconst createPromisedAudioNodesEncoderIdAndPort = async (audioBuffer, audioContext, channelCount, mediaStream, mimeType) => {\n    const { encoderId, port } = await instantiate(mimeType, audioContext.sampleRate);\n    if (AudioWorkletNode === undefined) {\n        throw new Error(ERROR_MESSAGE);\n    }\n    const audioBufferSourceNode = new AudioBufferSourceNode(audioContext, { buffer: audioBuffer });\n    const mediaStreamAudioSourceNode = new MediaStreamAudioSourceNode(audioContext, { mediaStream });\n    const recorderAudioWorkletNode = createRecorderAudioWorkletNode(AudioWorkletNode, audioContext, { channelCount });\n    return { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode };\n};\nexport const createWebAudioMediaRecorderFactory = (createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError) => {\n    return (eventTarget, mediaStream, mimeType) => {\n        var _a;\n        const sampleRate = (_a = mediaStream.getAudioTracks()[0]) === null || _a === void 0 ? void 0 : _a.getSettings().sampleRate;\n        const audioContext = new MinimalAudioContext({ latencyHint: 'playback', sampleRate });\n        const length = Math.max(1024, Math.ceil(audioContext.baseLatency * audioContext.sampleRate));\n        const audioBuffer = new AudioBuffer({ length, sampleRate: audioContext.sampleRate });\n        const bufferedArrayBuffers = [];\n        const promisedAudioWorkletModule = addRecorderAudioWorkletModule((url) => {\n            if (addAudioWorkletModule === undefined) {\n                throw new Error(ERROR_MESSAGE);\n            }\n            return addAudioWorkletModule(audioContext, url);\n        });\n        let abortRecording = null;\n        let intervalId = null;\n        let promisedAudioNodesAndEncoderId = null;\n        let promisedPartialRecording = null;\n        let isAudioContextRunning = true;\n        const dispatchDataAvailableEvent = (arrayBuffers) => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n        const requestNextPartialRecording = async (encoderId, timeslice) => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n            if (promisedAudioNodesAndEncoderId === null) {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            }\n            else {\n                dispatchDataAvailableEvent(arrayBuffers);\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n        const resume = () => {\n            isAudioContextRunning = true;\n            return audioContext.resume();\n        };\n        const stop = () => {\n            if (promisedAudioNodesAndEncoderId === null) {\n                return;\n            }\n            if (abortRecording !== null) {\n                mediaStream.removeEventListener('addtrack', abortRecording);\n                mediaStream.removeEventListener('removetrack', abortRecording);\n            }\n            if (intervalId !== null) {\n                clearTimeout(intervalId);\n            }\n            promisedAudioNodesAndEncoderId.then(async ({ encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode }) => {\n                if (promisedPartialRecording !== null) {\n                    promisedPartialRecording.catch(() => {\n                        /* @todo Only catch the errors caused by a duplicate call to encode. */\n                    });\n                    promisedPartialRecording = null;\n                }\n                await recorderAudioWorkletNode.stop();\n                mediaStreamAudioSourceNode.disconnect(recorderAudioWorkletNode);\n                const arrayBuffers = await encode(encoderId, null);\n                if (promisedAudioNodesAndEncoderId === null) {\n                    await suspend();\n                }\n                dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n                bufferedArrayBuffers.length = 0;\n                eventTarget.dispatchEvent(new Event('stop'));\n            });\n            promisedAudioNodesAndEncoderId = null;\n        };\n        const suspend = () => {\n            isAudioContextRunning = false;\n            return audioContext.suspend();\n        };\n        suspend();\n        return {\n            get mimeType() {\n                return mimeType;\n            },\n            get state() {\n                return promisedAudioNodesAndEncoderId === null ? 'inactive' : isAudioContextRunning ? 'recording' : 'paused';\n            },\n            pause() {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n                if (isAudioContextRunning) {\n                    suspend();\n                    eventTarget.dispatchEvent(new Event('pause'));\n                }\n            },\n            resume() {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n                if (!isAudioContextRunning) {\n                    resume();\n                    eventTarget.dispatchEvent(new Event('resume'));\n                }\n            },\n            start(timeslice) {\n                var _a;\n                if (promisedAudioNodesAndEncoderId !== null) {\n                    throw createInvalidStateError();\n                }\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                eventTarget.dispatchEvent(new Event('start'));\n                const audioTracks = mediaStream.getAudioTracks();\n                const channelCount = audioTracks.length === 0 ? 2 : (_a = audioTracks[0].getSettings().channelCount) !== null && _a !== void 0 ? _a : 2;\n                promisedAudioNodesAndEncoderId = Promise.all([\n                    resume(),\n                    promisedAudioWorkletModule.then(() => createPromisedAudioNodesEncoderIdAndPort(audioBuffer, audioContext, channelCount, mediaStream, mimeType))\n                ]).then(async ([, { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode }]) => {\n                    mediaStreamAudioSourceNode.connect(recorderAudioWorkletNode);\n                    await new Promise((resolve) => {\n                        audioBufferSourceNode.onended = resolve;\n                        audioBufferSourceNode.connect(recorderAudioWorkletNode);\n                        audioBufferSourceNode.start(audioContext.currentTime + length / audioContext.sampleRate);\n                    });\n                    audioBufferSourceNode.disconnect(recorderAudioWorkletNode);\n                    await recorderAudioWorkletNode.record(port);\n                    if (timeslice !== undefined) {\n                        promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n                    }\n                    return { encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode };\n                });\n                const tracks = mediaStream.getTracks();\n                abortRecording = () => {\n                    stop();\n                    eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n                };\n                mediaStream.addEventListener('addtrack', abortRecording);\n                mediaStream.addEventListener('removetrack', abortRecording);\n                intervalId = setInterval(() => {\n                    const currentTracks = mediaStream.getTracks();\n                    if ((currentTracks.length !== tracks.length || currentTracks.some((track, index) => track !== tracks[index])) &&\n                        abortRecording !== null) {\n                        abortRecording();\n                    }\n                }, 1000);\n            },\n            stop\n        };\n    };\n};\n//# sourceMappingURL=web-audio-media-recorder.js.map","export class MultiBufferDataView {\n    constructor(buffers, byteOffset = 0, byteLength) {\n        if (byteOffset < 0 || (byteLength !== undefined && byteLength < 0)) {\n            throw new RangeError();\n        }\n        const availableBytes = buffers.reduce((length, buffer) => length + buffer.byteLength, 0);\n        if (byteOffset > availableBytes || (byteLength !== undefined && byteOffset + byteLength > availableBytes)) {\n            throw new RangeError();\n        }\n        const dataViews = [];\n        const effectiveByteLength = byteLength === undefined ? availableBytes - byteOffset : byteLength;\n        const truncatedBuffers = [];\n        let consumedByteLength = 0;\n        let truncatedByteOffset = byteOffset;\n        for (const buffer of buffers) {\n            if (truncatedBuffers.length === 0) {\n                if (buffer.byteLength > truncatedByteOffset) {\n                    consumedByteLength = buffer.byteLength - truncatedByteOffset;\n                    const byteLengthOfDataView = consumedByteLength > effectiveByteLength ? effectiveByteLength : consumedByteLength;\n                    dataViews.push(new DataView(buffer, truncatedByteOffset, byteLengthOfDataView));\n                    truncatedBuffers.push(buffer);\n                }\n                else {\n                    truncatedByteOffset -= buffer.byteLength;\n                }\n            }\n            else if (consumedByteLength < effectiveByteLength) {\n                consumedByteLength += buffer.byteLength;\n                const byteLengthOfDataView = consumedByteLength > effectiveByteLength\n                    ? buffer.byteLength - consumedByteLength + effectiveByteLength\n                    : buffer.byteLength;\n                dataViews.push(new DataView(buffer, 0, byteLengthOfDataView));\n                truncatedBuffers.push(buffer);\n            }\n        }\n        this._buffers = truncatedBuffers;\n        this._byteLength = effectiveByteLength;\n        this._byteOffset = truncatedByteOffset;\n        this._dataViews = dataViews;\n        this._internalBuffer = new DataView(new ArrayBuffer(8));\n    }\n    get buffers() {\n        return this._buffers;\n    }\n    get byteLength() {\n        return this._byteLength;\n    }\n    get byteOffset() {\n        return this._byteOffset;\n    }\n    getFloat32(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        return this._internalBuffer.getFloat32(0, littleEndian);\n    }\n    getFloat64(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        this._internalBuffer.setUint8(4, this.getUint8(byteOffset + 4));\n        this._internalBuffer.setUint8(5, this.getUint8(byteOffset + 5));\n        this._internalBuffer.setUint8(6, this.getUint8(byteOffset + 6));\n        this._internalBuffer.setUint8(7, this.getUint8(byteOffset + 7));\n        return this._internalBuffer.getFloat64(0, littleEndian);\n    }\n    getInt16(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        return this._internalBuffer.getInt16(0, littleEndian);\n    }\n    getInt32(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        return this._internalBuffer.getInt32(0, littleEndian);\n    }\n    getInt8(byteOffset) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        return dataView.getInt8(byteOffset - byteOffsetOfDataView);\n    }\n    getUint16(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        return this._internalBuffer.getUint16(0, littleEndian);\n    }\n    getUint32(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        return this._internalBuffer.getUint32(0, littleEndian);\n    }\n    getUint8(byteOffset) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        return dataView.getUint8(byteOffset - byteOffsetOfDataView);\n    }\n    setFloat32(byteOffset, value, littleEndian) {\n        this._internalBuffer.setFloat32(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n    }\n    setFloat64(byteOffset, value, littleEndian) {\n        this._internalBuffer.setFloat64(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        this.setUint8(byteOffset + 4, this._internalBuffer.getUint8(4));\n        this.setUint8(byteOffset + 5, this._internalBuffer.getUint8(5));\n        this.setUint8(byteOffset + 6, this._internalBuffer.getUint8(6));\n        this.setUint8(byteOffset + 7, this._internalBuffer.getUint8(7));\n    }\n    setInt16(byteOffset, value, littleEndian) {\n        this._internalBuffer.setInt16(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n    }\n    setInt32(byteOffset, value, littleEndian) {\n        this._internalBuffer.setInt32(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n    }\n    setInt8(byteOffset, value) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        dataView.setInt8(byteOffset - byteOffsetOfDataView, value);\n    }\n    setUint16(byteOffset, value, littleEndian) {\n        this._internalBuffer.setUint16(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n    }\n    setUint32(byteOffset, value, littleEndian) {\n        this._internalBuffer.setUint32(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n    }\n    setUint8(byteOffset, value) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        dataView.setUint8(byteOffset - byteOffsetOfDataView, value);\n    }\n    _findDataViewWithOffset(byteOffset) {\n        let byteOffsetOfDataView = 0;\n        for (const dataView of this._dataViews) {\n            const byteOffsetOfNextDataView = byteOffsetOfDataView + dataView.byteLength;\n            if (byteOffset >= byteOffsetOfDataView && byteOffset < byteOffsetOfNextDataView) {\n                return [dataView, byteOffsetOfDataView];\n            }\n            byteOffsetOfDataView = byteOffsetOfNextDataView;\n        }\n        throw new RangeError();\n    }\n}\n//# sourceMappingURL=multi-buffer-data-view.js.map","import { encode, instantiate } from 'media-encoder-host';\nimport { MultiBufferDataView } from 'multi-buffer-data-view';\nimport { on } from 'subscribable-things';\nexport const createWebmPcmMediaRecorderFactory = (createBlobEvent, decodeWebMChunk, readVariableSizeInteger) => {\n    return (eventTarget, nativeMediaRecorderConstructor, mediaStream, mimeType) => {\n        const bufferedArrayBuffers = [];\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(mediaStream, { mimeType: 'audio/webm;codecs=pcm' });\n        let promisedPartialRecording = null;\n        let stopRecording = () => { }; // tslint:disable-line:no-empty\n        const dispatchDataAvailableEvent = (arrayBuffers) => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n        const requestNextPartialRecording = async (encoderId, timeslice) => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n            if (nativeMediaRecorder.state === 'inactive') {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            }\n            else {\n                dispatchDataAvailableEvent(arrayBuffers);\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n        const stop = () => {\n            if (nativeMediaRecorder.state === 'inactive') {\n                return;\n            }\n            if (promisedPartialRecording !== null) {\n                promisedPartialRecording.catch(() => {\n                    /* @todo Only catch the errors caused by a duplicate call to encode. */\n                });\n                promisedPartialRecording = null;\n            }\n            stopRecording();\n            stopRecording = () => { }; // tslint:disable-line:no-empty\n            nativeMediaRecorder.stop();\n        };\n        nativeMediaRecorder.addEventListener('error', (event) => {\n            stop();\n            eventTarget.dispatchEvent(new ErrorEvent('error', {\n                error: event.error\n            }));\n        });\n        nativeMediaRecorder.addEventListener('pause', () => eventTarget.dispatchEvent(new Event('pause')));\n        nativeMediaRecorder.addEventListener('resume', () => eventTarget.dispatchEvent(new Event('resume')));\n        nativeMediaRecorder.addEventListener('start', () => eventTarget.dispatchEvent(new Event('start')));\n        return {\n            get mimeType() {\n                return mimeType;\n            },\n            get state() {\n                return nativeMediaRecorder.state;\n            },\n            pause() {\n                return nativeMediaRecorder.pause();\n            },\n            resume() {\n                return nativeMediaRecorder.resume();\n            },\n            start(timeslice) {\n                const [audioTrack] = mediaStream.getAudioTracks();\n                if (audioTrack !== undefined && nativeMediaRecorder.state === 'inactive') {\n                    // Bug #19: Chrome does not expose the correct channelCount property right away.\n                    const { channelCount, sampleRate } = audioTrack.getSettings();\n                    if (channelCount === undefined) {\n                        throw new Error('The channelCount is not defined.');\n                    }\n                    if (sampleRate === undefined) {\n                        throw new Error('The sampleRate is not defined.');\n                    }\n                    let isRecording = false;\n                    let isStopped = false;\n                    // Bug #9: Chrome sometimes fires more than one dataavailable event while being inactive.\n                    let pendingInvocations = 0;\n                    let promisedDataViewElementTypeEncoderIdAndPort = instantiate(mimeType, sampleRate);\n                    stopRecording = () => {\n                        isStopped = true;\n                    };\n                    const removeEventListener = on(nativeMediaRecorder, 'dataavailable')(({ data }) => {\n                        pendingInvocations += 1;\n                        promisedDataViewElementTypeEncoderIdAndPort = promisedDataViewElementTypeEncoderIdAndPort.then(async ({ dataView = null, elementType = null, encoderId, port }) => {\n                            const arrayBuffer = await data.arrayBuffer();\n                            pendingInvocations -= 1;\n                            const currentDataView = dataView === null\n                                ? new MultiBufferDataView([arrayBuffer])\n                                : new MultiBufferDataView([...dataView.buffers, arrayBuffer], dataView.byteOffset);\n                            if (!isRecording && nativeMediaRecorder.state === 'recording' && !isStopped) {\n                                const lengthAndValue = readVariableSizeInteger(currentDataView, 0);\n                                if (lengthAndValue === null) {\n                                    return { dataView: currentDataView, elementType, encoderId, port };\n                                }\n                                const { value } = lengthAndValue;\n                                if (value !== 172351395) {\n                                    return { dataView, elementType, encoderId, port };\n                                }\n                                isRecording = true;\n                            }\n                            const { currentElementType, offset, contents } = decodeWebMChunk(currentDataView, elementType, channelCount);\n                            const remainingDataView = offset < currentDataView.byteLength\n                                ? new MultiBufferDataView(currentDataView.buffers, currentDataView.byteOffset + offset)\n                                : null;\n                            contents.forEach((content) => port.postMessage(content, content.map(({ buffer }) => buffer)));\n                            if (pendingInvocations === 0 && (nativeMediaRecorder.state === 'inactive' || isStopped)) {\n                                encode(encoderId, null).then((arrayBuffers) => {\n                                    dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n                                    bufferedArrayBuffers.length = 0;\n                                    eventTarget.dispatchEvent(new Event('stop'));\n                                });\n                                port.postMessage([]);\n                                port.close();\n                                removeEventListener();\n                            }\n                            return { dataView: remainingDataView, elementType: currentElementType, encoderId, port };\n                        });\n                    });\n                    if (timeslice !== undefined) {\n                        promisedDataViewElementTypeEncoderIdAndPort.then(({ encoderId }) => (promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice)));\n                    }\n                }\n                nativeMediaRecorder.start(100);\n            },\n            stop\n        };\n    };\n};\n//# sourceMappingURL=webm-pcm-media-recorder.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const readVariableSizeIntegerLength = (dataView, offset) => {\n    if (offset >= dataView.byteLength) {\n        return null;\n    }\n    const byte = dataView.getUint8(offset);\n    if (byte > 127) {\n        return 1;\n    }\n    if (byte > 63) {\n        return 2;\n    }\n    if (byte > 31) {\n        return 3;\n    }\n    if (byte > 15) {\n        return 4;\n    }\n    if (byte > 7) {\n        return 5;\n    }\n    if (byte > 3) {\n        return 6;\n    }\n    if (byte > 1) {\n        return 7;\n    }\n    if (byte > 0) {\n        return 8;\n    }\n    const length = readVariableSizeIntegerLength(dataView, offset + 1);\n    return length === null ? null : length + 8;\n};\n//# sourceMappingURL=read-variable-size-integer-length.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { register as rgstr } from 'media-encoder-host';\nimport { createBlobEventFactory } from './factories/blob-event-factory';\nimport { createDecodeWebMChunk } from './factories/decode-web-m-chunk';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createEventTargetFactory } from './factories/event-target-factory';\nimport { createInvalidModificationError } from './factories/invalid-modification-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaRecorderConstructor } from './factories/media-recorder-constructor';\nimport { createNativeBlobEventConstructor } from './factories/native-blob-event-constructor';\nimport { createNativeMediaRecorder } from './factories/native-media-recorder';\nimport { createNativeMediaRecorderConstructor } from './factories/native-media-recorder-constructor';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createReadElementContent } from './factories/read-element-content';\nimport { createReadElementType } from './factories/read-element-type';\nimport { createReadVariableSizeInteger } from './factories/read-variable-size-integer';\nimport { createWebAudioMediaRecorderFactory } from './factories/web-audio-media-recorder';\nimport { createWebmPcmMediaRecorderFactory } from './factories/webm-pcm-media-recorder';\nimport { createWindow } from './factories/window';\nimport { readVariableSizeIntegerLength } from './functions/read-variable-size-integer-length';\nimport { wrapEventListener } from './functions/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderRegexes = [];\nconst window = createWindow();\nconst nativeBlobEventConstructor = createNativeBlobEventConstructor(window);\nconst createBlobEvent = createBlobEventFactory(nativeBlobEventConstructor);\nconst createWebAudioMediaRecorder = createWebAudioMediaRecorderFactory(createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError);\nconst readVariableSizeInteger = createReadVariableSizeInteger(readVariableSizeIntegerLength);\nconst readElementContent = createReadElementContent(readVariableSizeInteger);\nconst readElementType = createReadElementType(readVariableSizeInteger);\nconst decodeWebMChunk = createDecodeWebMChunk(readElementContent, readElementType);\nconst createWebmPcmMediaRecorder = createWebmPcmMediaRecorderFactory(createBlobEvent, decodeWebMChunk, readVariableSizeInteger);\nconst createEventTarget = createEventTargetFactory(window);\nconst nativeMediaRecorderConstructor = createNativeMediaRecorderConstructor(window);\nconst mediaRecorderConstructor = createMediaRecorderConstructor(createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, createEventTargetConstructor(createEventTarget, wrapEventListener), nativeMediaRecorderConstructor);\nexport { mediaRecorderConstructor as MediaRecorder };\nexport const isSupported = () => createIsSupportedPromise(window);\nexport const register = async (port) => {\n    encoderRegexes.push(await rgstr(port));\n};\n//# sourceMappingURL=module.js.map"],"names":["createAddUniqueNumber","generateUniqueNumber","set","number","createCache","lastNumberWeakMap","collection","nextNumber","MAX_SAFE_INTEGER","TWO_TO_THE_POWER_OF_TWENTY_NINE","TWO_TO_THE_POWER_OF_THIRTY","createGenerateUniqueNumber","cache","lastNumber","LAST_NUMBER_WEAK_MAP","addUniqueNumber","isMessagePort","sender","PORT_MAP","extendBrokerImplementation","partialBrokerImplementation","call","port1","port2","portId","port","ONGOING_REQUESTS","createOrGetOngoingRequests","ongoingRequests","createBroker","brokerImplementation","fullBrokerImplementation","message","id","reject","resolve","method","params","transferables","notify","functions","key","handler","encoderIds","wrap","encoderId","timeslice","arrayBuffers","mimeType","sampleRate","load","url","worker","blob","mediaEncoderHost","loadWorker","encode","instantiate","register","createBlobEventFactory","nativeBlobEventConstructor","type","blobEventInit","createDecodeWebMChunk","readElementContent","readElementType","dataView","elementType","channelCount","contents","currentElementType","offset","lengthAndType","length","contentAndLength","content","createEventTargetConstructor","createEventTarget","wrapEventListener","nativeEventTarget","listener","options","wrappedEventListener","event","createEventTargetFactory","window","createInvalidModificationError","err","createInvalidStateError","createIsSupportedPromise","canvasElement","context","mediaStream","mediaRecorder","data","hasDispatchedDataAvailableEvent","hasDispatchedStopEvent","results","result","createMediaRecorderConstructor","createNativeMediaRecorder","createNotSupportedError","createWebAudioMediaRecorder","createWebmPcmMediaRecorder","encoderRegexes","eventTargetConstructor","nativeMediaRecorderConstructor","stream","internalMediaRecorder","regex","value","boundListener","createNativeBlobEventConstructor","mediaRecorderOptions","bufferedBlobEventListeners","dataAvailableListeners","errorListeners","nativeMediaRecorder","stopListeners","isSliced","addEventListener","patchedEventListener","bufferedBlobEvents","dataAvailableListener","blobEvent","removeEventListener","errorListener","stopListener","start","createNativeMediaRecorderConstructor","createReadElementContent","readVariableSizeInteger","lengthAndValue","numberOfSamples","i","elementOffset","j","createReadElementType","createReadVariableSizeInteger","readVariableSizeIntegerLength","firstDataByteOffset","observable","patch","arg","noop","rethrow","error","toObserver","observer","createOn","wrapSubscribeFunction","target","createWrapSubscribeFunction","emptyFunction","isNextFunction","args","innerSubscribe","subscribe","unsubscribe","on","dashify","str","m","indefiniteArticle","phrase","word","match","l_word","alt_cases","regexes","module","applyModifiers","name","modifiers","modifiedName","modifier","head","tail","buildRegex","variable","expression","preRenderString","string","parameters","expressionRegex","variables","expressionResult","modifiersRegex","modifiersRegexResult","preRenderedParts","parts","part","prts","prt","index","prmtrs","missingParameters","renderedParts","preRenderedPart","compile","template","knownParameters","renderCode","renderMessage","render","causeOrMissingParameters","optionalCause","hasNoOptionalCause","cause","JSON_RPC_ERROR_CODES","createAddRecorderAudioWorkletModule","blobConstructor","urlConstructor","worklet","addAudioWorkletModule","createListener","ongoingRequest","createPostMessageFactory","createRecorderAudioWorkletNodeFactory","createPostMessage","validateState","audioWorkletNodeConstructor","audioWorkletNode","postMessage","state","encoderPort","expectedStates","currentState","expectedState","addRecorderAudioWorkletModule","createRecorderAudioWorkletNode","createExtendedExponentialRampToValueAutomationEvent","endTime","insertTime","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","timeConstant","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","defaultValue","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","getExponentialRampValueAtTime","getLinearRampValueAtTime","interpolateValue","theoreticIndex","lowerIndex","upperIndex","getValueCurveValueAtTime","isSetTargetAutomationEvent","AutomationEventList","eventTime","removedAutomationEvent","lastAutomationEvent","startValue","truncatedAutomationEvent","ratio","fraction","factor","previousAutomationEvent","persistentAutomationEvent","remainingAutomationEvents","firstRemainingAutomationEvent","indexOfNextEvent","indexOfCurrentEvent","createCancelAndHoldAutomationEvent","cancelTime","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","createAbortError","createAddActiveInputConnectionToAudioNode","insertElementInSet","activeInputs","source","output","input","eventListener","ignoreDuplicates","activeInputConnection","createAddAudioNodeConnections","audioNodeConnectionsStore","audioNode","audioNodeRenderer","nativeAudioNode","createAddAudioParamConnections","audioParamConnectionsStore","audioParam","audioParamRenderer","ACTIVE_AUDIO_NODE_STORE","AUDIO_NODE_CONNECTIONS_STORE","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","isConstructible","constructible","proxy","IMPORT_STATEMENT_REGEX","splitImportStatements","importStatements","sourceWithoutImportStatements","unresolvedUrl","importStatementWithResolvedUrl","verifyParameterDescriptors","parameterDescriptors","verifyProcessorCtor","processorCtor","createAddAudioWorkletModule","cacheTestResult","evaluateSource","exposeCurrentFrameAndCurrentTime","fetchSource","getNativeContext","getOrCreateBackupOfflineAudioContext","isNativeOfflineAudioContext","nativeAudioWorkletNodeConstructor","resolvedRequests","testAudioWorkletProcessorPostMessageSupport","moduleURL","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","nativeContext","promise","absoluteUrl","wrappedSource","evaluateAudioWorkletGlobalScope","nodeNameToProcessorConstructorMap","isSupportingPostMessage","currentIndex","backupOfflineAudioContext","nativeContextOrBackupOfflineAudioContext","updatedResolvedRequestsOfContext","updatedOngoingRequestsOfContext","getValueForKey","map","pickElementFromSet","predicate","matchingElements","matchingElement","deletePassiveInputConnectionToAudioNode","passiveInputs","passiveInputConnections","matchingConnection","passiveInputConnection","getEventListenersOfAudioNode","setInternalStateToActive","isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","connections","createAddConnectionToAudioNode","addActiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioNode","connectNativeAudioNodeToNativeAudioNode","deleteActiveInputConnectionToAudioNode","disconnectNativeAudioNodeFromNativeAudioNode","getAudioNodeConnections","getAudioNodeTailTime","getNativeAudioNode","isActiveAudioNode","isPartOfACycle","isPassiveAudioNode","tailTimeTimeoutIds","destination","isOffline","outputs","eventListeners","isActive","nativeDestinationAudioNode","nativeSourceAudioNode","partialConnection","tailTime","tailTimeTimeoutId","outputConnection","createAddPassiveInputConnectionToAudioNode","createAddSilentConnection","createNativeGainNode","nativeAudioScheduledSourceNode","nativeGainNode","disconnect","createAddUnrenderedAudioWorkletNode","getUnrenderedAudioWorkletNodes","isOwnedByContext","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","createIndexSizeError","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","channel","DEFAULT_OPTIONS","createAudioBufferConstructor","audioBufferStore","nativeAudioBufferConstructor","nativeOfflineAudioContextConstructor","testNativeAudioBufferConstructorSupport","wrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","nativeOfflineAudioContext","AudioBuffer","numberOfChannels","instance","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","createAudioBufferSourceNodeConstructor","audioNodeConstructor","createAudioBufferSourceNodeRenderer","createAudioParam","createNativeAudioBufferSourceNode","mergedOptions","nativeAudioBufferSourceNode","audioBufferSourceNodeRenderer","wrappedListener","nativeOnEnded","when","resetInternalStateToPassive","createAudioBufferSourceNodeRendererFactory","connectAudioParam","renderAutomation","renderInputsOfAudioNode","renderedNativeAudioBufferSourceNodes","stop","createAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","renderedNativeAudioBufferSourceNode","isAudioBufferSourceNode","isBiquadFilterNode","isConstantSourceNode","isGainNode","isOscillatorNode","isStereoPannerNode","getAudioParamConnections","deactivateActiveAudioNodeInputConnections","trace","audioParams","audioParamConnections","deactivateAudioGraph","isValidLatencyHint","latencyHint","createAudioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","audioDestinationNodeRenderer","renderedNativeAudioDestinationNodes","createAudioDestinationNode","renderedNativeAudioDestinationNode","createAudioListenerFactory","createNativeChannelMergerNode","createNativeConstantSourceNode","createNativeScriptProcessorNode","getFirstSample","overwriteAccessors","nativeListener","createFakeAudioParams","buffer","channelMergerNode","isScriptProcessorNodeCreated","lastOrientation","lastPosition","createScriptProcessorNode","scriptProcessorNode","inputBuffer","orientation","positon","createSetOrientation","createSetPosition","createFakeAudioParam","initialValue","setValue","constantSourceNode","get","cancelAndHoldAtTime","cancelScheduledValues","exponentialRampToValueAtTime","linearRampToValueAtTime","setTargetAtTime","setValueAtTime","setValueCurveAtTime","forwardX","forwardY","forwardZ","positionX","positionY","positionZ","upX","upY","upZ","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","element","lmnt","addActiveInputConnectionToAudioParam","addPassiveInputConnectionToAudioParam","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","fakeNativeDestinationAudioNode","deleteActiveInputConnection","activeInputConnections","deleteActiveInputConnectionToAudioParam","deleteEventListenerOfAudioNode","deletePassiveInputConnectionToAudioParam","getNativeAudioParam","testAudioNodeDisconnectMethodSupport","nativeAudioContext","analyzer","dummy","ones","channelData","chnnlDt","sample","visitEachAudioNodeOnce","cycles","visitor","counts","cycle","count","isNativeAudioNode","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","connect","returnValue","connectionsToDestination","connection","destinationOrOutput","filteredConnections","addConnectionToAudioParamOfAudioContext","nativeAudioParam","deleteInputConnectionOfAudioNode","deleteInputConnectionOfAudioParam","deleteInputsOfAudioNode","deleteInputsOfAudioParam","deleteAnyConnection","audioNodeConnectionsOfSource","destinations","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioNodeConstructor","addAudioNodeConnections","addConnectionToAudioNode","createIncrementCycleCounter","createInvalidAccessError","decrementCycleCounter","detectCycles","isNativeAudioContext","isNativeAudioParam","isPassive","createAudioParamFactory","addAudioParamConnections","audioParamAudioNodeStore","audioParamStore","createAudioParamRenderer","nativeAudioContextConstructor","setValueAtTimeUntilPossible","isAudioParamOfOfflineAudioContext","maxValue","minValue","automationEventList","previousLastEvent","currentLastEvent","currentTime","convertedValues","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","ReadOnlyMap","callback","thisArg","createAudioWorkletNodeConstructor","addUnrenderedAudioWorkletNode","createAudioWorkletNodeRenderer","createNativeAudioWorkletNode","getBackupOfflineAudioContext","sanitizeAudioWorkletNodeOptions","setActiveAudioWorkletNodeInputs","testAudioWorkletNodeOptionsClonability","_a","processorConstructor","nativeAudioWorkletNode","audioWorkletNodeRenderer","nm","nativeOnProcessorError","copyFromChannel","parent","channelNumber","bufferOffset","slicedInput","copyToChannel","createNestedArrays","x","y","arrays","array","getAudioWorkletProcessor","nodeToProcessorMap","processBuffer","renderedBuffer","outputChannelCount","numberOfInputChannels","numberOfOutputChannels","sum","processedBuffer","audioNodeConnections","audioWorkletProcessor","inputs","k","potentiallyEmptyInputs","activeSourceFlag","outputChannelSplitterNodeOutput","createAudioWorkletNodeRendererFactory","connectMultipleOutputs","createNativeChannelSplitterNode","deleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","renderNativeOfflineAudioContext","renderedNativeAudioNodes","processedBufferPromise","createAudioNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","outputChannelSplitterNode","outputChannelMergerNodes","outputGainNode","numberOfParameters","partialOfflineAudioContext","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","gainNode","audioBufferSourceNode","outputChannelMergerNode","renderedNativeAudioWorkletNodeOrGainNode","createCacheTestResult","ongoingTests","testResults","tester","test","cachedTestResult","ongoingTest","synchronousTestResult","finalTestResult","createConnectAudioParam","renderInputsOfAudioParam","createConnectMultipleOutputs","outputAudioNodes","outputAudioNode","createConvertNumberToUnsignedLong","unit32Array","createDataCloneError","detachArrayBuffer","arrayBuffer","closeAndResolve","createDecodeAudioData","createEncodingError","detachedArrayBuffers","isNativeContext","testPromiseSupport","anyContext","audioData","complete","fail","createDecrementCycleCounter","cycleCounters","cycleCounter","nativeDestinationAudioParam","createDeleteActiveInputConnectionToAudioNode","createDeleteUnrenderedAudioWorkletNode","isDelayNode","createDetectCycles","chain","nextLink","mergedCycles","nestedCycles","getOutputAudioNodeAtIndex","createDisconnectMultipleOutputs","createEvaluateSource","script","originalOnErrorHandler","removeErrorEventListenerAndRevokeUrl","src","lineno","colno","_nativeEventTarget","createExposeCurrentFrameAndCurrentTime","fn","createFetchSource","response","createGetActiveAudioWorkletNodeInputs","activeAudioWorkletNodeInputsStore","createGetAudioNodeRenderer","createGetAudioNodeTailTime","audioNodeTailTimeStore","createGetAudioParamRenderer","createGetBackupOfflineAudioContext","backupOfflineAudioContextStore","createGetNativeContext","contextStore","createGetOrCreateBackupOfflineAudioContext","createGetUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodeStore","unrenderedAudioWorkletNodes","createIncrementCycleCounterFactory","createIsNativeAudioContext","anything","createIsNativeAudioNode","createIsNativeAudioParam","createIsNativeContext","createIsNativeOfflineAudioContext","createIsSecureContext","createMediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","createMinimalAudioContextConstructor","createUnknownError","minimalBaseAudioContextConstructor","revokeState","resolvePromise","createMinimalBaseAudioContextConstructor","audioDestinationNodeConstructor","createAudioListener","_nativeContext","nativeOnStateChange","uint32Array","createMonitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","createNativeAudioBufferConstructor","assignNativeAudioNodeAudioParamValue","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","isScheduled","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","createNativeAudioBufferSourceNodeFactory","addSilentConnection","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","createNativeAudioContextConstructor","createNativeAudioDestinationNodeFactory","isNodeOfNativeOfflineAudioContext","createNativeAudioWorkletNodeConstructor","testClonabilityOfAudioWorkletNodeOptions","audioWorkletNodeOptions","createNativeAudioWorkletNodeFactory","createNativeAudioWorkletNodeFaker","monitorConnections","baseLatency","patchedEventListeners","onprocessorerror","unpatchedEventListener","computeBufferSize","cloneAudioWorkletNodeOptions","createAudioWorkletProcessorPromise","clonedAudioWorkletNodeOptions","createAudioWorkletProcessor","audioWorkletProcessorPromise","createNativeAudioWorkletNodeFakerFactory","getActiveAudioWorkletNodeInputs","messageChannel","bufferSize","parameterMap","channelInterpretation","nativeAudioWorkletNodeFaker","_","onmessage","dWrkltPrcssr","disconnectOutputsGraph","activeInputIndexes","outputBuffer","isConnected","disconnectFakeGraph","connectFakeGraph","createNativeChannelMergerNodeFactory","wrapChannelMergerNode","nativeChannelMergerNode","wrapChannelSplitterNode","channelSplitterNode","nativeChannelSplitterNode","createNativeConstantSourceNodeFactory","createNativeConstantSourceNodeFaker","nativeConstantSourceNode","interceptConnections","original","interceptor","createNativeConstantSourceNodeFakerFactory","audioNodeOptions","nativeConstantSourceNodeFaker","audioStreamTracks","a","b","filteredAudioStreamTracks","createNativeOfflineAudioContextConstructor","createNativePeriodicWaveFactory","disableNormalization","imag","real","convertedImag","convertedReal","nativePeriodicWave","createPeriodicWaveConstructor","createNativePeriodicWave","periodicWaveStore","sanitizePeriodicWaveOptions","PeriodicWave","periodicWave","createRenderAutomation","getAudioParamRenderer","createRenderInputsOfAudioNode","getAudioNodeRenderer","renderedNativeAudioNode","allRenderingPromises","renderingPromises","createRenderInputsOfAudioParam","createRenderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","createSetActiveAudioWorkletNodeInputs","createTestAudioBufferConstructorSupport","createTestAudioWorkletProcessorPostMessageSupport","offlineAudioContext","isEmittingMessageEvents","isEmittingProcessorErrorEvents","oscillator","createTestOfflineAudioContextCurrentTimeSupport","createWindow","createWrapAudioBufferCopyChannelMethods","convertNumberToUnsignedLong","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","nullifiedBuffer","createWrapChannelMergerNode","object","property","createGetter","createSetter","prototype","wrapAudioBufferSourceNodeStartMethodOffsetClamping","clampedOffset","disconnectGainNode","isStopped","descriptor","audioBufferConstructor","audioBufferSourceNodeConstructor","isSecureContext","mediaStreamAudioSourceNodeConstructor","minimalAudioContextConstructor","ERROR_MESSAGE","createPromisedAudioNodesEncoderIdAndPort","audioContext","AudioWorkletNode","AudioBufferSourceNode","mediaStreamAudioSourceNode","MediaStreamAudioSourceNode","recorderAudioWorkletNode","createWebAudioMediaRecorderFactory","createBlobEvent","eventTarget","MinimalAudioContext","bufferedArrayBuffers","promisedAudioWorkletModule","abortRecording","intervalId","promisedAudioNodesAndEncoderId","promisedPartialRecording","isAudioContextRunning","dispatchDataAvailableEvent","requestNextPartialRecording","resume","suspend","audioTracks","tracks","currentTracks","track","MultiBufferDataView","buffers","byteOffset","byteLength","availableBytes","dataViews","effectiveByteLength","truncatedBuffers","consumedByteLength","truncatedByteOffset","byteLengthOfDataView","littleEndian","byteOffsetOfDataView","byteOffsetOfNextDataView","createWebmPcmMediaRecorderFactory","decodeWebMChunk","stopRecording","audioTrack","isRecording","pendingInvocations","promisedDataViewElementTypeEncoderIdAndPort","currentDataView","remainingDataView","byte","mediaRecorderConstructor","isSupported","rgstr"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249]}